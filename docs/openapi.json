{
  "openapi": "3.0.3",
  "info": {
    "title": "KMS",
    "description": "The KMS allows you to perform all the operations that you do with our applications. KMS is built using REST principles which ensures predictable URLs, uses standard HTTP response codes, authentication, and verbs that makes writing applications easy.\n\n## Query Params\n\nKMS support a common way for pagination, sorting, filtering, searching and other using URL query params on `GET` method.\n\n### Pagination\n\nYou can use the following query parameters for pagination :\n\n* `$page`: used to specify the page number to retrieve, default = 1.\n* `$per_page`: used to specify the number of items to retrieve per page, default = 10.\n* `$is_disable_pagination`: used to disable pagination and retrieve all items in one request, default = false.\nExample :\n```\nGET /contacts?$page=3\u0026$per_page=10\n```\n\n### Sorting\n\nYou can use the `$sort` query parameter for sorting.\n\n* Use the field name according to what you want to sort.\n* Use dot notation to sort by the field of the object.\n* You can specify multiple fields separated by commas.\n* Add `-` (minus sign) before the field name to sort in descending order.\n* Add `:i` after the field name to sort case-insensitively.\n\nThis is example if you want to retrieve product data sort by category name, then quantity on hand descending, then case-insensitive name descending :\n```\nGET /products?$sort=category.name,-quantity.on_hand,-name:i\n```\n\n### Filtering\n\nYou can use the field name for filtering the result set based on one or more conditions.\n\n* Use the field name according to what you want to filter.\n* Use dot notation to filter by the field of the object.\n* Use dot notation with `*` to filter by the field on array of the object. (TODO)\n* Use dot notation with `0` to filter by the field on array of the object and also hide non-matching arrays in the results. (TODO)\n* You can use the following operators for filtering :\n\nOperator  | Description               | Example\n----------|---------------------------|-----------------------------\nnone      | Equal to (Exact matches)  | `/contacts?gender=male`\n`$eq`     | Same as above             | `/contacts?gender.$eq=male`\n`$ne`     | Not equal to              | `/contacts?phone.$ne=null`\n`$gt`     | Greater than              | `/contacts?age.$gt=18`\n`$gte`    | Greater than or equal     | `/contacts?age.$gte=21`\n`$lt`     | Less than                 | `/contacts?age.$lt=17`\n`$lte`    | Less than or equal        | `/contacts?age.$lte=15`\n`$like`   | Like                      | `/contacts?name.$like=john%`\n`$nlike`  | Not like                  | `/contacts?name.$nlike=john%`\n`$ilike`  | Case-insensitive Like     | `/contacts?name.$ilike=john%`\n`$nilike` | Case-insensitive Not Like | `/contacts?name.$nilike=john%`\n`$in`     | In                        | `/contacts?age.$in=17,21,34`\n`$nin`    | Not in                    | `/contacts?age.$nin=17,21,34`\n\n### Conditional filtering\n\nYou can use the `$or` query parameter with `|` delimiter for conditional filtering.\n\nThis is example if you want to filter contact data with condition `(gender = 'female' or age \u003c 10) and (is_salesman = '1' or is_employee = '1')` :\n```\nGET /contacts?$or=gender:female|age.$lt:10\u0026$or=is_salesman:true|is_employee:true\n```\n\n### Searching\n\nYou can use the `$search` query parameter for searching.\n\nThis is example if you want to search contact data with code or name contain character \"john\" (case-insensitive) :\n```\nGET /contacts?$search=code,name:john\n```\n\n### Comparing\n\nYou can use the `$field` key for comparing one field to another field in the same record.\n\nThis is example if you want to filter product data with qty_on_order greater than qty_available :\n```\nGET /products?qty_on_order.$gt=$field:qty_available\n```\n\n### Selection\n\nYou can use the `$select` query parameter to retrieve specific fields in the response.\n\n* Use the field name according to what you want to retrieve.\n* Use dot notation to retrieve the field of the object.\n* You can specify multiple fields separated by commas, for example : `GET /contacts?$select=id,code,name,classification.name`.\n* By default, array fields are hidden on get list api for performance reason, you can use `$nclude` query parameter to retrieve the specific array field, for example : `/contacts?$include=families,friends,phones`. Example to retrieve all array field : `/contacts?$include=all`\n* You can use the following operator for aggregation :\n\nOperator | Description | Example                    \n---------|-------------|----------------------------\n`$count` | count       | `/products?$select=$count:id`\n`$sum`   | sum         | `/products?$select=$sum:sold`\n`$min`   | minimum     | `/products?$select=$min:sold`\n`$max`   | maximum     | `/products?$select=$max:sold`\n`$avg`   | average     | `/products?$select=$avg:sold`\n\n### Grouping\n\nYou can use the `$group` query parameter to grouping.\n\nExample :\n```\n/products?$group=category.id\u0026$select=category.id,$sum:sold\u0026$sort:-$sum:sold\n```\n",
    "contact": {
      "name": ""
    },
    "license": {
      "name": ""
    },
    "version": "2023.07.062157"
  },
  "servers": [
    {
      "description": "Local",
      "url": "http://127.0.0.1:4001"
    }
  ],
  "paths": {
    "/api/v1/akademi": {
      "post": {
        "description": "Use this method to create Akademi",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Akademi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Akademi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Akademi",
        "tags": [
          "Akademi"
        ]
      },
      "get": {
        "description": "Use this method to get list of Akademi",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AkademiList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Akademi",
        "tags": [
          "Akademi"
        ]
      }
    },
    "/api/v1/akademi/{id}": {
      "get": {
        "description": "Use this method to get Akademi by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Akademi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Akademi By ID",
        "tags": [
          "Akademi"
        ]
      },
      "put": {
        "description": "Use this method to update Akademi by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Akademi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Akademi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Akademi By ID",
        "tags": [
          "Akademi"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Akademi by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Akademi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Akademi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Akademi By ID",
        "tags": [
          "Akademi"
        ]
      },
      "delete": {
        "description": "Use this method to delete Akademi by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Akademi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Akademi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Akademi By ID",
        "tags": [
          "Akademi"
        ]
      }
    },
    "/api/v1/attachments": {
      "post": {
        "description": "Use this method to create Attachment",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Attachment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Attachment",
        "tags": [
          "Attachment"
        ]
      },
      "get": {
        "description": "Use this method to get list of Attachment",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Attachment",
        "tags": [
          "Attachment"
        ]
      }
    },
    "/api/v1/attachments/{id}": {
      "get": {
        "description": "Use this method to get Attachment by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Attachment By ID",
        "tags": [
          "Attachment"
        ]
      },
      "delete": {
        "description": "Use this method to delete Attachment by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Attachment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Attachment By ID",
        "tags": [
          "Attachment"
        ]
      }
    },
    "/api/v1/caches": {
      "delete": {
        "description": "Use this method to delete Attachment by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Attachment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Attachment By ID",
        "tags": [
          "Attachment"
        ]
      }
    },
    "/api/v1/dislike": {
      "post": {
        "description": "Use this method to create Dislike",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dislike"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dislike"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Dislike",
        "tags": [
          "Dislike"
        ]
      },
      "get": {
        "description": "Use this method to get list of Dislike",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DislikeList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Dislike",
        "tags": [
          "Dislike"
        ]
      }
    },
    "/api/v1/dislike/{id}": {
      "get": {
        "description": "Use this method to get Dislike by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dislike"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Dislike By ID",
        "tags": [
          "Dislike"
        ]
      },
      "put": {
        "description": "Use this method to update Dislike by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dislike"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dislike"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Dislike By ID",
        "tags": [
          "Dislike"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Dislike by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dislike"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dislike"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Dislike By ID",
        "tags": [
          "Dislike"
        ]
      },
      "delete": {
        "description": "Use this method to delete Dislike by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dislike"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dislike"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Dislike By ID",
        "tags": [
          "Dislike"
        ]
      }
    },
    "/api/v1/jenis_pengetahuan": {
      "post": {
        "description": "Use this method to create JenisPengetahuan",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JenisPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JenisPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create JenisPengetahuan",
        "tags": [
          "JenisPengetahuan"
        ]
      },
      "get": {
        "description": "Use this method to get list of JenisPengetahuan",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JenisPengetahuanList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get JenisPengetahuan",
        "tags": [
          "JenisPengetahuan"
        ]
      }
    },
    "/api/v1/jenis_pengetahuan/{id}": {
      "get": {
        "description": "Use this method to get JenisPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JenisPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get JenisPengetahuan By ID",
        "tags": [
          "JenisPengetahuan"
        ]
      },
      "put": {
        "description": "Use this method to update JenisPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JenisPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JenisPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update JenisPengetahuan By ID",
        "tags": [
          "JenisPengetahuan"
        ]
      },
      "patch": {
        "description": "Use this method to partially update JenisPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JenisPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JenisPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update JenisPengetahuan By ID",
        "tags": [
          "JenisPengetahuan"
        ]
      },
      "delete": {
        "description": "Use this method to delete JenisPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JenisPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JenisPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete JenisPengetahuan By ID",
        "tags": [
          "JenisPengetahuan"
        ]
      }
    },
    "/api/v1/komentar": {
      "post": {
        "description": "Use this method to create Komentar",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Komentar"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Komentar"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Komentar",
        "tags": [
          "Komentar"
        ]
      },
      "get": {
        "description": "Use this method to get list of Komentar",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KomentarList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Komentar",
        "tags": [
          "Komentar"
        ]
      }
    },
    "/api/v1/komentar/{id}": {
      "get": {
        "description": "Use this method to get Komentar by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Komentar"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Komentar By ID",
        "tags": [
          "Komentar"
        ]
      },
      "put": {
        "description": "Use this method to update Komentar by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Komentar"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Komentar"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Komentar By ID",
        "tags": [
          "Komentar"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Komentar by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Komentar"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Komentar"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Komentar By ID",
        "tags": [
          "Komentar"
        ]
      },
      "delete": {
        "description": "Use this method to delete Komentar by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Komentar"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Komentar"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Komentar By ID",
        "tags": [
          "Komentar"
        ]
      }
    },
    "/api/v1/kompetensi": {
      "post": {
        "description": "Use this method to create Kompetensi",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Kompetensi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Kompetensi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Kompetensi",
        "tags": [
          "Kompetensi"
        ]
      },
      "get": {
        "description": "Use this method to get list of Kompetensi",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KompetensiList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Kompetensi",
        "tags": [
          "Kompetensi"
        ]
      }
    },
    "/api/v1/kompetensi/{id}": {
      "get": {
        "description": "Use this method to get Kompetensi by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Kompetensi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Kompetensi By ID",
        "tags": [
          "Kompetensi"
        ]
      },
      "put": {
        "description": "Use this method to update Kompetensi by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Kompetensi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Kompetensi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Kompetensi By ID",
        "tags": [
          "Kompetensi"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Kompetensi by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Kompetensi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Kompetensi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Kompetensi By ID",
        "tags": [
          "Kompetensi"
        ]
      },
      "delete": {
        "description": "Use this method to delete Kompetensi by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Kompetensi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Kompetensi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Kompetensi By ID",
        "tags": [
          "Kompetensi"
        ]
      }
    },
    "/api/v1/like": {
      "post": {
        "description": "Use this method to create Like",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Like"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Like"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Like",
        "tags": [
          "Like"
        ]
      },
      "get": {
        "description": "Use this method to get list of Like",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LikeList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Like",
        "tags": [
          "Like"
        ]
      }
    },
    "/api/v1/like/{id}": {
      "get": {
        "description": "Use this method to get Like by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Like"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Like By ID",
        "tags": [
          "Like"
        ]
      },
      "put": {
        "description": "Use this method to update Like by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Like"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Like"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Like By ID",
        "tags": [
          "Like"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Like by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Like"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Like"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Like By ID",
        "tags": [
          "Like"
        ]
      },
      "delete": {
        "description": "Use this method to delete Like by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Like"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Like"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Like By ID",
        "tags": [
          "Like"
        ]
      }
    },
    "/api/v1/lingkup_pengetahuan": {
      "post": {
        "description": "Use this method to create LingkupPengetahuan",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LingkupPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LingkupPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create LingkupPengetahuan",
        "tags": [
          "LingkupPengetahuan"
        ]
      },
      "get": {
        "description": "Use this method to get list of LingkupPengetahuan",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LingkupPengetahuanList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get LingkupPengetahuan",
        "tags": [
          "LingkupPengetahuan"
        ]
      }
    },
    "/api/v1/lingkup_pengetahuan/{id}": {
      "get": {
        "description": "Use this method to get LingkupPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LingkupPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get LingkupPengetahuan By ID",
        "tags": [
          "LingkupPengetahuan"
        ]
      },
      "put": {
        "description": "Use this method to update LingkupPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LingkupPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LingkupPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update LingkupPengetahuan By ID",
        "tags": [
          "LingkupPengetahuan"
        ]
      },
      "patch": {
        "description": "Use this method to partially update LingkupPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LingkupPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LingkupPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update LingkupPengetahuan By ID",
        "tags": [
          "LingkupPengetahuan"
        ]
      },
      "delete": {
        "description": "Use this method to delete LingkupPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LingkupPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LingkupPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete LingkupPengetahuan By ID",
        "tags": [
          "LingkupPengetahuan"
        ]
      }
    },
    "/api/v1/login": {
      "post": {
        "description": "Use this method to start login session",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessToken"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Login Session",
        "tags": [
          "Login"
        ]
      }
    },
    "/api/v1/orang": {
      "post": {
        "description": "Use this method to create Orang",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Orang"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Orang"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Orang",
        "tags": [
          "Orang"
        ]
      },
      "get": {
        "description": "Use this method to get list of Orang",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrangList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Orang",
        "tags": [
          "Orang"
        ]
      }
    },
    "/api/v1/orang/{id}": {
      "get": {
        "description": "Use this method to get Orang by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Orang"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Orang By ID",
        "tags": [
          "Orang"
        ]
      },
      "put": {
        "description": "Use this method to update Orang by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Orang"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Orang"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Orang By ID",
        "tags": [
          "Orang"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Orang by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Orang"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Orang"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Orang By ID",
        "tags": [
          "Orang"
        ]
      },
      "delete": {
        "description": "Use this method to delete Orang by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Orang"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Orang"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Orang By ID",
        "tags": [
          "Orang"
        ]
      }
    },
    "/api/v1/pengetahuan": {
      "post": {
        "description": "Use this method to create Pengetahuan",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Pengetahuan",
        "tags": [
          "Pengetahuan"
        ]
      },
      "get": {
        "description": "Use this method to get list of Pengetahuan",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PengetahuanList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Pengetahuan",
        "tags": [
          "Pengetahuan"
        ]
      }
    },
    "/api/v1/pengetahuan/{id}": {
      "get": {
        "description": "Use this method to get Pengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Pengetahuan By ID",
        "tags": [
          "Pengetahuan"
        ]
      },
      "put": {
        "description": "Use this method to update Pengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Pengetahuan By ID",
        "tags": [
          "Pengetahuan"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Pengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Pengetahuan By ID",
        "tags": [
          "Pengetahuan"
        ]
      },
      "delete": {
        "description": "Use this method to delete Pengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Pengetahuan By ID",
        "tags": [
          "Pengetahuan"
        ]
      }
    },
    "/api/v1/referensi": {
      "post": {
        "description": "Use this method to create Referensi",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Referensi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Referensi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Referensi",
        "tags": [
          "Referensi"
        ]
      },
      "get": {
        "description": "Use this method to get list of Referensi",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferensiList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Referensi",
        "tags": [
          "Referensi"
        ]
      }
    },
    "/api/v1/referensi/{id}": {
      "get": {
        "description": "Use this method to get Referensi by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Referensi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Referensi By ID",
        "tags": [
          "Referensi"
        ]
      },
      "put": {
        "description": "Use this method to update Referensi by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Referensi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Referensi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Referensi By ID",
        "tags": [
          "Referensi"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Referensi by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Referensi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Referensi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Referensi By ID",
        "tags": [
          "Referensi"
        ]
      },
      "delete": {
        "description": "Use this method to delete Referensi by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Referensi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Referensi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Referensi By ID",
        "tags": [
          "Referensi"
        ]
      }
    },
    "/api/v1/status_pengetahuan": {
      "post": {
        "description": "Use this method to create StatusPengetahuan",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create StatusPengetahuan",
        "tags": [
          "StatusPengetahuan"
        ]
      },
      "get": {
        "description": "Use this method to get list of StatusPengetahuan",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusPengetahuanList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get StatusPengetahuan",
        "tags": [
          "StatusPengetahuan"
        ]
      }
    },
    "/api/v1/status_pengetahuan/{id}": {
      "get": {
        "description": "Use this method to get StatusPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get StatusPengetahuan By ID",
        "tags": [
          "StatusPengetahuan"
        ]
      },
      "put": {
        "description": "Use this method to update StatusPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update StatusPengetahuan By ID",
        "tags": [
          "StatusPengetahuan"
        ]
      },
      "patch": {
        "description": "Use this method to partially update StatusPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update StatusPengetahuan By ID",
        "tags": [
          "StatusPengetahuan"
        ]
      },
      "delete": {
        "description": "Use this method to delete StatusPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete StatusPengetahuan By ID",
        "tags": [
          "StatusPengetahuan"
        ]
      }
    },
    "/api/v1/subjenis_pengetahuan": {
      "post": {
        "description": "Use this method to create SubjenisPengetahuan",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjenisPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjenisPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create SubjenisPengetahuan",
        "tags": [
          "SubjenisPengetahuan"
        ]
      },
      "get": {
        "description": "Use this method to get list of SubjenisPengetahuan",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjenisPengetahuanList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get SubjenisPengetahuan",
        "tags": [
          "SubjenisPengetahuan"
        ]
      }
    },
    "/api/v1/subjenis_pengetahuan/{id}": {
      "get": {
        "description": "Use this method to get SubjenisPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjenisPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get SubjenisPengetahuan By ID",
        "tags": [
          "SubjenisPengetahuan"
        ]
      },
      "put": {
        "description": "Use this method to update SubjenisPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjenisPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjenisPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update SubjenisPengetahuan By ID",
        "tags": [
          "SubjenisPengetahuan"
        ]
      },
      "patch": {
        "description": "Use this method to partially update SubjenisPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjenisPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjenisPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update SubjenisPengetahuan By ID",
        "tags": [
          "SubjenisPengetahuan"
        ]
      },
      "delete": {
        "description": "Use this method to delete SubjenisPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjenisPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjenisPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete SubjenisPengetahuan By ID",
        "tags": [
          "SubjenisPengetahuan"
        ]
      }
    },
    "/api/v1/tag": {
      "post": {
        "description": "Use this method to create Tag",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Tag",
        "tags": [
          "Tag"
        ]
      },
      "get": {
        "description": "Use this method to get list of Tag",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Tag",
        "tags": [
          "Tag"
        ]
      }
    },
    "/api/v1/tag/{id}": {
      "get": {
        "description": "Use this method to get Tag by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Tag By ID",
        "tags": [
          "Tag"
        ]
      },
      "put": {
        "description": "Use this method to update Tag by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Tag By ID",
        "tags": [
          "Tag"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Tag by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Tag By ID",
        "tags": [
          "Tag"
        ]
      },
      "delete": {
        "description": "Use this method to delete Tag by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Tag By ID",
        "tags": [
          "Tag"
        ]
      }
    },
    "/api/v1/user": {
      "post": {
        "description": "Use this method to create User",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create User",
        "tags": [
          "User"
        ]
      },
      "get": {
        "description": "Use this method to get list of User",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get User",
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/user/{id}": {
      "get": {
        "description": "Use this method to get User by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get User By ID",
        "tags": [
          "User"
        ]
      },
      "put": {
        "description": "Use this method to update User by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update User By ID",
        "tags": [
          "User"
        ]
      },
      "patch": {
        "description": "Use this method to partially update User by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update User By ID",
        "tags": [
          "User"
        ]
      },
      "delete": {
        "description": "Use this method to delete User by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete User By ID",
        "tags": [
          "User"
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "headerParam.Accept-Language": {
        "in": "header",
        "name": "Accept-Language",
        "schema": {
          "default": "en-US",
          "enum": [
            "en-US",
            "en",
            "id-ID",
            "id"
          ],
          "type": "string"
        }
      },
      "pathParam.ID": {
        "description": "An ID of the resources",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "queryParam.Any": {
        "explode": true,
        "in": "query",
        "name": "params",
        "schema": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      }
    },
    "schemas": {
      "AccessToken": {
        "properties": {
          "access_token": {
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "expired_at": {
            "format": "date-time",
            "type": "string"
          },
          "ip_address": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "user": {
            "properties": {
              "email": {
                "type": "string"
              },
              "foto": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "jabatan": {
                "type": "string"
              },
              "jenis": {
                "type": "string"
              },
              "nama_lengkap": {
                "type": "string"
              },
              "nama_panggilan": {
                "type": "string"
              },
              "nip": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "status_level": {
                "type": "string"
              },
              "unit_kerja": {
                "type": "string"
              },
              "user_level": {
                "type": "string"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Akademi": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "nama": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AkademiList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "nama": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Attachment": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "extension": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "storage_location": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AttachmentList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "extension": {
                  "type": "string"
                },
                "filename": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "size": {
                  "type": "integer"
                },
                "storage_location": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Dislike": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DislikeList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Error.BadRequest": {
        "properties": {
          "error": {
            "properties": {
              "code": {
                "example": 400,
                "format": "int32",
                "type": "integer"
              },
              "message": {
                "example": "The request cannot be performed because of malformed or missing parameters.",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Error.Forbidden": {
        "properties": {
          "error": {
            "properties": {
              "code": {
                "example": 403,
                "format": "int32",
                "type": "integer"
              },
              "message": {
                "example": "The user does not have permission to access the resource.",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Error.Unauthorized": {
        "properties": {
          "error": {
            "properties": {
              "code": {
                "example": 401,
                "format": "int32",
                "type": "integer"
              },
              "message": {
                "example": "Invalid authentication token.",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "JenisPengetahuan": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "nama": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "JenisPengetahuanList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "nama": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Komentar": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "komentar": {
            "type": "string"
          },
          "parent_komentar": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "komentar": {
                "type": "string"
              },
              "status": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "pengetahuan": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "status": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "user": {
            "properties": {
              "email": {
                "type": "string"
              },
              "foto": {
                "nama": {
                  "type": "string"
                },
                "properties": {
                  "url": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "id": {
                "type": "integer"
              },
              "jabatan": {
                "type": "string"
              },
              "nama_lengkap": {
                "type": "string"
              },
              "nama_panggilan": {
                "type": "string"
              },
              "nip": {
                "type": "string"
              },
              "status_level": {
                "type": "string"
              },
              "unit_kerja": {
                "type": "string"
              },
              "user_level": {
                "type": "string"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "KomentarList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "komentar": {
                  "type": "string"
                },
                "parent_komentar": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "komentar": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "pengetahuan": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "user": {
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "foto": {
                      "id": {
                        "type": "integer"
                      },
                      "properties": {
                        "nama": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "jabatan": {
                      "type": "string"
                    },
                    "nama_lengkap": {
                      "type": "string"
                    },
                    "nama_panggilan": {
                      "type": "string"
                    },
                    "nip": {
                      "type": "string"
                    },
                    "status_level": {
                      "type": "string"
                    },
                    "unit_kerja": {
                      "type": "string"
                    },
                    "user_level": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Kompetensi": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "nama": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "KompetensiList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "nama": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Like": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "pengetahuan": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "user": {
            "properties": {
              "email": {
                "type": "string"
              },
              "foto": {
                "properties": {
                  "nama": {
                    "type": "string"
                  }
                },
                "type": "object",
                "url": {
                  "type": "string"
                }
              },
              "id": {
                "type": "integer"
              },
              "jabatan": {
                "type": "string"
              },
              "nama_lengkap": {
                "type": "string"
              },
              "nama_panggilan": {
                "type": "string"
              },
              "nip": {
                "type": "string"
              },
              "status_level": {
                "type": "string"
              },
              "unit_kerja": {
                "type": "string"
              },
              "user_level": {
                "type": "string"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "LikeList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "pengetahuan": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "user": {
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "foto": {
                      "nama": {
                        "type": "string"
                      },
                      "properties": {
                        "id": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "jabatan": {
                      "type": "string"
                    },
                    "nama_lengkap": {
                      "type": "string"
                    },
                    "nama_panggilan": {
                      "type": "string"
                    },
                    "nip": {
                      "type": "string"
                    },
                    "status_level": {
                      "type": "string"
                    },
                    "unit_kerja": {
                      "type": "string"
                    },
                    "user_level": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "LingkupPengetahuan": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "nama": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LingkupPengetahuanList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "nama": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Login": {
        "properties": {
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Orang": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "type": "integer"
          },
          "deleted_by": {
            "type": "integer"
          },
          "email": {
            "format": "email",
            "type": "string"
          },
          "foto": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "nama": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "integer"
          },
          "jabatan": {
            "type": "string"
          },
          "nama_lengkap": {
            "type": "string"
          },
          "nama_panggilan": {
            "type": "string"
          },
          "nip": {
            "type": "string"
          },
          "status_level": {
            "type": "string"
          },
          "unit_kerja": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_by": {
            "type": "integer"
          },
          "user_level": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrangList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "type": "integer"
                },
                "deleted_by": {
                  "type": "integer"
                },
                "email": {
                  "format": "email",
                  "type": "string"
                },
                "foto": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "nama": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "jabatan": {
                  "type": "string"
                },
                "nama_lengkap": {
                  "type": "string"
                },
                "nama_panggilan": {
                  "type": "string"
                },
                "nip": {
                  "type": "string"
                },
                "status_level": {
                  "type": "string"
                },
                "unit_kerja": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "updated_by": {
                  "type": "integer"
                },
                "user_level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Pengetahuan": {
        "properties": {
          "akademi": {
            "items": {
              "properties": {
                "id": {
                  "type": "integer"
                },
                "nama": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "dampak": {
            "type": "string"
          },
          "dasar_hukum": {
            "type": "string"
          },
          "data_digunakan": {
            "type": "string"
          },
          "deleted_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "dokumen": {
            "items": {
              "properties": {
                "id": {
                  "type": "integer"
                },
                "nama": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "hipotesis": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "jenis_pengetahuan": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "nama": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "judul": {
            "type": "string"
          },
          "jumlah_halaman": {
            "type": "integer"
          },
          "keahlian_dibutuhkan": {
            "type": "string"
          },
          "kesimpulan_rekomendasi": {
            "type": "string"
          },
          "kompetensi": {
            "items": {
              "properties": {
                "id": {
                  "type": "integer"
                },
                "nama": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "latar_belakang": {
            "type": "string"
          },
          "lesson_learned": {
            "type": "string"
          },
          "lingkup_pengetahuan": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "nama": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "masalah": {
            "type": "string"
          },
          "metode_pengawasan": {
            "type": "string"
          },
          "narasumber": {
            "items": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "nama": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "pedoman": {
            "items": {
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "pembahasan": {
            "type": "string"
          },
          "penelitian_terdahulu": {
            "type": "string"
          },
          "penerbit": {
            "items": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "nama": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "pengujian": {
            "type": "string"
          },
          "penulis_1": {
            "properties": {
              "foto": {
                "id": {
                  "type": "string"
                },
                "properties": {
                  "nama": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "id": {
                "type": "integer"
              },
              "jabatan": {
                "type": "string"
              },
              "nama": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "penulis_2": {
            "properties": {
              "foto": {
                "id": {
                  "type": "string"
                },
                "properties": {
                  "url": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "id": {
                "type": "integer"
              },
              "jabatan": {
                "type": "string"
              },
              "nama": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "penulis_3": {
            "properties": {
              "foto": {
                "properties": {
                  "nama": {
                    "type": "string"
                  }
                },
                "type": "object",
                "url": {
                  "type": "string"
                }
              },
              "id": {
                "type": "integer"
              },
              "jabatan": {
                "type": "string"
              },
              "nama": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "penulis_external": {
            "items": {
              "properties": {
                "asal_instansi": {
                  "type": "string"
                },
                "nama_penulis_external": {
                  "type": "string"
                },
                "nik": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "penyebab": {
            "type": "string"
          },
          "proses_bisnis": {
            "type": "string"
          },
          "referensi": {
            "items": {
              "properties": {
                "id": {
                  "type": "integer"
                },
                "nama": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "ringkasan": {
            "type": "string"
          },
          "risiko_objek_pengawasan": {
            "type": "string"
          },
          "rumusan_masalah": {
            "type": "string"
          },
          "solusi": {
            "type": "string"
          },
          "statistik": {
            "properties": {
              "dislike": {
                "type": "integer"
              },
              "komentar": {
                "type": "integer"
              },
              "like": {
                "type": "integer"
              },
              "view": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "status_pengetahuan": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "nama": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "subjenis_pengetahuan": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "nama": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "syarat_hasil": {
            "type": "string"
          },
          "tag": {
            "items": {
              "properties": {
                "id": {
                  "type": "integer"
                },
                "nama": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "tahun_terbit": {
            "type": "integer"
          },
          "temuan_material": {
            "type": "string"
          },
          "tenaga_ahli": {
            "items": {
              "properties": {
                "email": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "jabatan": {
                  "type": "string"
                },
                "nama_lengkap": {
                  "type": "string"
                },
                "nip": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "thumbnail": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "nama": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "tujuan": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "PengetahuanList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "akademi": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "nama": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "dampak": {
                  "type": "string"
                },
                "dasar_hukum": {
                  "type": "string"
                },
                "data_digunakan": {
                  "type": "string"
                },
                "deleted_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "dokumen": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "nama": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "hipotesis": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "jenis_pengetahuan": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "nama": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "judul": {
                  "type": "string"
                },
                "jumlah_halaman": {
                  "type": "integer"
                },
                "keahlian_dibutuhkan": {
                  "type": "string"
                },
                "kesimpulan_rekomendasi": {
                  "type": "string"
                },
                "kompetensi": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "nama": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "latar_belakang": {
                  "type": "string"
                },
                "lesson_learned": {
                  "type": "string"
                },
                "lingkup_pengetahuan": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "nama": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "masalah": {
                  "type": "string"
                },
                "metode_pengawasan": {
                  "type": "string"
                },
                "narasumber": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "nama": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "pedoman": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "pembahasan": {
                  "type": "string"
                },
                "penelitian_terdahulu": {
                  "type": "string"
                },
                "penerbit": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "nama": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "pengujian": {
                  "type": "string"
                },
                "penulis_1": {
                  "properties": {
                    "foto": {
                      "id": {
                        "type": "string"
                      },
                      "properties": {
                        "url": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "jabatan": {
                      "type": "string"
                    },
                    "nama": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "penulis_2": {
                  "properties": {
                    "foto": {
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "url": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "integer"
                    },
                    "jabatan": {
                      "type": "string"
                    },
                    "nama": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "penulis_3": {
                  "properties": {
                    "foto": {
                      "id": {
                        "type": "string"
                      },
                      "properties": {
                        "url": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "jabatan": {
                      "type": "string"
                    },
                    "nama": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "penulis_external": {
                  "items": {
                    "properties": {
                      "asal_instansi": {
                        "type": "string"
                      },
                      "nama_penulis_external": {
                        "type": "string"
                      },
                      "nik": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "penyebab": {
                  "type": "string"
                },
                "proses_bisnis": {
                  "type": "string"
                },
                "referensi": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "nama": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "ringkasan": {
                  "type": "string"
                },
                "risiko_objek_pengawasan": {
                  "type": "string"
                },
                "rumusan_masalah": {
                  "type": "string"
                },
                "solusi": {
                  "type": "string"
                },
                "statistik": {
                  "properties": {
                    "dislike": {
                      "type": "integer"
                    },
                    "komentar": {
                      "type": "integer"
                    },
                    "like": {
                      "type": "integer"
                    },
                    "view": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "status_pengetahuan": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "nama": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "subjenis_pengetahuan": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "nama": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "syarat_hasil": {
                  "type": "string"
                },
                "tag": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "nama": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "tahun_terbit": {
                  "type": "integer"
                },
                "temuan_material": {
                  "type": "string"
                },
                "tenaga_ahli": {
                  "items": {
                    "properties": {
                      "email": {
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "jabatan": {
                        "type": "string"
                      },
                      "nama_lengkap": {
                        "type": "string"
                      },
                      "nip": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "thumbnail": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "nama": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "tujuan": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "updated_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Referensi": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_at": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "referensi": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReferensiList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "deleted_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "referensi": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "StatusPengetahuan": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "nama": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "StatusPengetahuanList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "nama": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SubjenisPengetahuan": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "jenis_pengetahuan": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "nama": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "nama": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SubjenisPengetahuanList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "jenis_pengetahuan": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "nama": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "nama": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Tag": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "nama": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TagList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "nama": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "User": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "foto": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "nama": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "integer"
          },
          "jabatan": {
            "type": "string"
          },
          "jenis": {
            "type": "string"
          },
          "nama_lengkap": {
            "type": "string"
          },
          "nama_panggilan": {
            "type": "string"
          },
          "nip": {
            "type": "string"
          },
          "status_level": {
            "type": "string"
          },
          "unit_kerja": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "user_level": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "foto": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "nama": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "jabatan": {
                  "type": "string"
                },
                "jenis": {
                  "type": "string"
                },
                "nama_lengkap": {
                  "type": "string"
                },
                "nama_panggilan": {
                  "type": "string"
                },
                "nip": {
                  "type": "string"
                },
                "status_level": {
                  "type": "string"
                },
                "unit_kerja": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "user_level": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "bearerTokenAuth": {
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "security": [
    {
      "bearerTokenAuth": []
    }
  ],
  "tags": [
    {
      "name": "User"
    },
    {
      "name": "Orang"
    },
    {
      "name": "Akademi"
    },
    {
      "name": "JenisPengetahuan"
    },
    {
      "name": "Kompetensi"
    },
    {
      "name": "LingkupPengetahuan"
    },
    {
      "name": "StatusPengetahuan"
    },
    {
      "name": "SubjenisPengetahuan"
    },
    {
      "name": "Tag"
    },
    {
      "name": "Pengetahuan"
    },
    {
      "name": "Referensi"
    },
    {
      "name": "Login"
    },
    {
      "name": "Attachment"
    },
    {
      "name": "Komentar"
    },
    {
      "name": "Like"
    },
    {
      "name": "Dislike"
    }
  ],
  "externalDocs": {
    "url": ""
  }
}