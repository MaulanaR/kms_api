{
  "openapi": "3.0.3",
  "info": {
    "title": "KMS",
    "description": "The KMS allows you to perform all the operations that you do with our applications. KMS is built using REST principles which ensures predictable URLs, uses standard HTTP response codes, authentication, and verbs that makes writing applications easy.\n\n## Query Params\n\nKMS support a common way for pagination, sorting, filtering, searching and other using URL query params on `GET` method.\n\n### Pagination\n\nYou can use the following query parameters for pagination :\n\n* `$page`: used to specify the page number to retrieve, default = 1.\n* `$per_page`: used to specify the number of items to retrieve per page, default = 10.\n* `$is_disable_pagination`: used to disable pagination and retrieve all items in one request, default = false.\nExample :\n```\nGET /contacts?$page=3\u0026$per_page=10\n```\n\n### Sorting\n\nYou can use the `$sort` query parameter for sorting.\n\n* Use the field name according to what you want to sort.\n* Use dot notation to sort by the field of the object.\n* You can specify multiple fields separated by commas.\n* Add `-` (minus sign) before the field name to sort in descending order.\n* Add `:i` after the field name to sort case-insensitively.\n\nThis is example if you want to retrieve product data sort by category name, then quantity on hand descending, then case-insensitive name descending :\n```\nGET /products?$sort=category.name,-quantity.on_hand,-name:i\n```\n\n### Filtering\n\nYou can use the field name for filtering the result set based on one or more conditions.\n\n* Use the field name according to what you want to filter.\n* Use dot notation to filter by the field of the object.\n* Use dot notation with `*` to filter by the field on array of the object. (TODO)\n* Use dot notation with `0` to filter by the field on array of the object and also hide non-matching arrays in the results. (TODO)\n* You can use the following operators for filtering :\n\nOperator  | Description               | Example\n----------|---------------------------|-----------------------------\nnone      | Equal to (Exact matches)  | `/contacts?gender=male`\n`$eq`     | Same as above             | `/contacts?gender.$eq=male`\n`$ne`     | Not equal to              | `/contacts?phone.$ne=null`\n`$gt`     | Greater than              | `/contacts?age.$gt=18`\n`$gte`    | Greater than or equal     | `/contacts?age.$gte=21`\n`$lt`     | Less than                 | `/contacts?age.$lt=17`\n`$lte`    | Less than or equal        | `/contacts?age.$lte=15`\n`$like`   | Like                      | `/contacts?name.$like=john%`\n`$nlike`  | Not like                  | `/contacts?name.$nlike=john%`\n`$ilike`  | Case-insensitive Like     | `/contacts?name.$ilike=john%`\n`$nilike` | Case-insensitive Not Like | `/contacts?name.$nilike=john%`\n`$in`     | In                        | `/contacts?age.$in=17,21,34`\n`$nin`    | Not in                    | `/contacts?age.$nin=17,21,34`\n\n### Conditional filtering\n\nYou can use the `$or` query parameter with `|` delimiter for conditional filtering.\n\nThis is example if you want to filter contact data with condition `(gender = 'female' or age \u003c 10) and (is_salesman = '1' or is_employee = '1')` :\n```\nGET /contacts?$or=gender:female|age.$lt:10\u0026$or=is_salesman:true|is_employee:true\n```\n\n### Searching\n\nYou can use the `$search` query parameter for searching.\n\nThis is example if you want to search contact data with code or name contain character \"john\" (case-insensitive) :\n```\nGET /contacts?$search=code,name:john\n```\n\n### Comparing\n\nYou can use the `$field` key for comparing one field to another field in the same record.\n\nThis is example if you want to filter product data with qty_on_order greater than qty_available :\n```\nGET /products?qty_on_order.$gt=$field:qty_available\n```\n\n### Selection\n\nYou can use the `$select` query parameter to retrieve specific fields in the response.\n\n* Use the field name according to what you want to retrieve.\n* Use dot notation to retrieve the field of the object.\n* You can specify multiple fields separated by commas, for example : `GET /contacts?$select=id,code,name,classification.name`.\n* By default, array fields are hidden on get list api for performance reason, you can use `$nclude` query parameter to retrieve the specific array field, for example : `/contacts?$include=families,friends,phones`. Example to retrieve all array field : `/contacts?$include=all`\n* You can use the following operator for aggregation :\n\nOperator | Description | Example                    \n---------|-------------|----------------------------\n`$count` | count       | `/products?$select=$count:id`\n`$sum`   | sum         | `/products?$select=$sum:sold`\n`$min`   | minimum     | `/products?$select=$min:sold`\n`$max`   | maximum     | `/products?$select=$max:sold`\n`$avg`   | average     | `/products?$select=$avg:sold`\n\n### Grouping\n\nYou can use the `$group` query parameter to grouping.\n\nExample :\n```\n/products?$group=category.id\u0026$select=category.id,$sum:sold\u0026$sort:-$sum:sold\n```\n",
    "contact": {
      "name": ""
    },
    "license": {
      "name": ""
    },
    "version": "2023.07.062157"
  },
  "servers": [
    {
      "description": "Local",
      "url": "http://127.0.0.1"
    }
  ],
  "paths": {
    "/api/v1/advis_analytics": {
      "post": {
        "description": "Use this method to create AdvisAnalytic",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvisAnalytic"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisAnalytic"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create AdvisAnalytic",
        "tags": [
          "AdvisAnalytic"
        ]
      },
      "get": {
        "description": "Use this method to get list of AdvisAnalytic",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisAnalyticList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get AdvisAnalytic",
        "tags": [
          "AdvisAnalytic"
        ]
      }
    },
    "/api/v1/advis_analytics/template_csv": {
      "get": {
        "description": "Use this method to get list of AdvisAnalytic",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisAnalyticList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get AdvisAnalytic",
        "tags": [
          "AdvisAnalytic"
        ]
      }
    },
    "/api/v1/advis_analytics/upload_csv": {
      "post": {
        "description": "Use this method to get list of AdvisAnalytic",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisAnalyticList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get AdvisAnalytic",
        "tags": [
          "AdvisAnalytic"
        ]
      }
    },
    "/api/v1/advis_analytics/{id}": {
      "get": {
        "description": "Use this method to get AdvisAnalytic by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisAnalytic"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get AdvisAnalytic By ID",
        "tags": [
          "AdvisAnalytic"
        ]
      },
      "put": {
        "description": "Use this method to update AdvisAnalytic by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvisAnalytic"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisAnalytic"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update AdvisAnalytic By ID",
        "tags": [
          "AdvisAnalytic"
        ]
      },
      "patch": {
        "description": "Use this method to partially update AdvisAnalytic by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvisAnalytic"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisAnalytic"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update AdvisAnalytic By ID",
        "tags": [
          "AdvisAnalytic"
        ]
      },
      "delete": {
        "description": "Use this method to delete AdvisAnalytic by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvisAnalytic"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisAnalytic"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete AdvisAnalytic By ID",
        "tags": [
          "AdvisAnalytic"
        ]
      }
    },
    "/api/v1/advis_kategori": {
      "post": {
        "description": "Use this method to create AdvisKategori",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvisKategori"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisKategori"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create AdvisKategori",
        "tags": [
          "AdvisKategori"
        ]
      },
      "get": {
        "description": "Use this method to get list of AdvisKategori",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisKategoriList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get AdvisKategori",
        "tags": [
          "AdvisKategori"
        ]
      }
    },
    "/api/v1/advis_kategori/{id}": {
      "get": {
        "description": "Use this method to get AdvisKategori by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisKategori"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get AdvisKategori By ID",
        "tags": [
          "AdvisKategori"
        ]
      },
      "put": {
        "description": "Use this method to update AdvisKategori by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvisKategori"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisKategori"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update AdvisKategori By ID",
        "tags": [
          "AdvisKategori"
        ]
      },
      "patch": {
        "description": "Use this method to partially update AdvisKategori by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvisKategori"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisKategori"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update AdvisKategori By ID",
        "tags": [
          "AdvisKategori"
        ]
      },
      "delete": {
        "description": "Use this method to delete AdvisKategori by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvisKategori"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisKategori"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete AdvisKategori By ID",
        "tags": [
          "AdvisKategori"
        ]
      }
    },
    "/api/v1/advis_list_data": {
      "post": {
        "description": "Use this method to create AdvisListData",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvisListData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisListData"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create AdvisListData",
        "tags": [
          "AdvisListData"
        ]
      },
      "get": {
        "description": "Use this method to get list of AdvisListData",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisListDataList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get AdvisListData",
        "tags": [
          "AdvisListData"
        ]
      }
    },
    "/api/v1/advis_list_data/template_csv": {
      "get": {
        "description": "Use this method to get list of AdvisListData",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisListDataList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get AdvisListData",
        "tags": [
          "AdvisListData"
        ]
      }
    },
    "/api/v1/advis_list_data/upload_csv": {
      "post": {
        "description": "Use this method to get list of AdvisListData",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisListDataList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get AdvisListData",
        "tags": [
          "AdvisListData"
        ]
      }
    },
    "/api/v1/advis_list_data/{id}": {
      "get": {
        "description": "Use this method to get AdvisListData by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisListData"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get AdvisListData By ID",
        "tags": [
          "AdvisListData"
        ]
      },
      "put": {
        "description": "Use this method to update AdvisListData by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvisListData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisListData"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update AdvisListData By ID",
        "tags": [
          "AdvisListData"
        ]
      },
      "patch": {
        "description": "Use this method to partially update AdvisListData by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvisListData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisListData"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update AdvisListData By ID",
        "tags": [
          "AdvisListData"
        ]
      },
      "delete": {
        "description": "Use this method to delete AdvisListData by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvisListData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisListData"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete AdvisListData By ID",
        "tags": [
          "AdvisListData"
        ]
      }
    },
    "/api/v1/advis_sub_kategori": {
      "post": {
        "description": "Use this method to create AdvisSubKategori",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvisSubKategori"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisSubKategori"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create AdvisSubKategori",
        "tags": [
          "AdvisSubKategori"
        ]
      },
      "get": {
        "description": "Use this method to get list of AdvisSubKategori",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisSubKategoriList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get AdvisSubKategori",
        "tags": [
          "AdvisSubKategori"
        ]
      }
    },
    "/api/v1/advis_sub_kategori/{id}": {
      "get": {
        "description": "Use this method to get AdvisSubKategori by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisSubKategori"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get AdvisSubKategori By ID",
        "tags": [
          "AdvisSubKategori"
        ]
      },
      "put": {
        "description": "Use this method to update AdvisSubKategori by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvisSubKategori"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisSubKategori"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update AdvisSubKategori By ID",
        "tags": [
          "AdvisSubKategori"
        ]
      },
      "patch": {
        "description": "Use this method to partially update AdvisSubKategori by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvisSubKategori"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisSubKategori"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update AdvisSubKategori By ID",
        "tags": [
          "AdvisSubKategori"
        ]
      },
      "delete": {
        "description": "Use this method to delete AdvisSubKategori by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvisSubKategori"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisSubKategori"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete AdvisSubKategori By ID",
        "tags": [
          "AdvisSubKategori"
        ]
      }
    },
    "/api/v1/advis_sumber_data": {
      "post": {
        "description": "Use this method to create AdvisSumberData",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvisSumberData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisSumberData"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create AdvisSumberData",
        "tags": [
          "AdvisSumberData"
        ]
      },
      "get": {
        "description": "Use this method to get list of AdvisSumberData",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisSumberDataList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get AdvisSumberData",
        "tags": [
          "AdvisSumberData"
        ]
      }
    },
    "/api/v1/advis_sumber_data/{id}": {
      "get": {
        "description": "Use this method to get AdvisSumberData by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisSumberData"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get AdvisSumberData By ID",
        "tags": [
          "AdvisSumberData"
        ]
      },
      "put": {
        "description": "Use this method to update AdvisSumberData by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvisSumberData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisSumberData"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update AdvisSumberData By ID",
        "tags": [
          "AdvisSumberData"
        ]
      },
      "patch": {
        "description": "Use this method to partially update AdvisSumberData by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvisSumberData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisSumberData"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update AdvisSumberData By ID",
        "tags": [
          "AdvisSumberData"
        ]
      },
      "delete": {
        "description": "Use this method to delete AdvisSumberData by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvisSumberData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisSumberData"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete AdvisSumberData By ID",
        "tags": [
          "AdvisSumberData"
        ]
      }
    },
    "/api/v1/akademi": {
      "post": {
        "description": "Use this method to create Akademi",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Akademi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Akademi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Akademi",
        "tags": [
          "Akademi"
        ]
      },
      "get": {
        "description": "Use this method to get list of Akademi",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AkademiList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Akademi",
        "tags": [
          "Akademi"
        ]
      }
    },
    "/api/v1/akademi/{id}": {
      "get": {
        "description": "Use this method to get Akademi by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Akademi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Akademi By ID",
        "tags": [
          "Akademi"
        ]
      },
      "put": {
        "description": "Use this method to update Akademi by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Akademi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Akademi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Akademi By ID",
        "tags": [
          "Akademi"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Akademi by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Akademi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Akademi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Akademi By ID",
        "tags": [
          "Akademi"
        ]
      },
      "delete": {
        "description": "Use this method to delete Akademi by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Akademi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Akademi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Akademi By ID",
        "tags": [
          "Akademi"
        ]
      }
    },
    "/api/v1/attachments": {
      "post": {
        "description": "Use this method to create Attachment",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Attachment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Attachment",
        "tags": [
          "Attachment"
        ]
      },
      "get": {
        "description": "Use this method to get list of Attachment",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Attachment",
        "tags": [
          "Attachment"
        ]
      }
    },
    "/api/v1/attachments/{id}": {
      "get": {
        "description": "Use this method to get Attachment by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Attachment By ID",
        "tags": [
          "Attachment"
        ]
      },
      "delete": {
        "description": "Use this method to delete Attachment by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Attachment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Attachment By ID",
        "tags": [
          "Attachment"
        ]
      }
    },
    "/api/v1/banner_carousel": {
      "post": {
        "description": "Use this method to create BannerCarousel",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BannerCarousel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BannerCarousel"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create BannerCarousel",
        "tags": [
          "BannerCarousel"
        ]
      },
      "get": {
        "description": "Use this method to get list of BannerCarousel",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BannerCarouselList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get BannerCarousel",
        "tags": [
          "BannerCarousel"
        ]
      }
    },
    "/api/v1/banner_carousel/{id}": {
      "get": {
        "description": "Use this method to get BannerCarousel by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BannerCarousel"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get BannerCarousel By ID",
        "tags": [
          "BannerCarousel"
        ]
      },
      "put": {
        "description": "Use this method to update BannerCarousel by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BannerCarousel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BannerCarousel"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update BannerCarousel By ID",
        "tags": [
          "BannerCarousel"
        ]
      },
      "patch": {
        "description": "Use this method to partially update BannerCarousel by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BannerCarousel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BannerCarousel"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update BannerCarousel By ID",
        "tags": [
          "BannerCarousel"
        ]
      },
      "delete": {
        "description": "Use this method to delete BannerCarousel by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BannerCarousel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BannerCarousel"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete BannerCarousel By ID",
        "tags": [
          "BannerCarousel"
        ]
      }
    },
    "/api/v1/caches": {
      "delete": {
        "description": "Use this method to delete Attachment by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Attachment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Attachment By ID",
        "tags": [
          "Attachment"
        ]
      }
    },
    "/api/v1/dislike": {
      "get": {
        "description": "Use this method to get list of Dislike",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DislikeList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Dislike",
        "tags": [
          "Dislike"
        ]
      }
    },
    "/api/v1/dislike/{id}": {
      "get": {
        "description": "Use this method to get Dislike by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dislike"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Dislike By ID",
        "tags": [
          "Dislike"
        ]
      }
    },
    "/api/v1/dokumen": {
      "post": {
        "description": "Use this method to create Dokumen",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dokumen"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dokumen"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Dokumen",
        "tags": [
          "Dokumen"
        ]
      },
      "get": {
        "description": "Use this method to get list of Dokumen",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DokumenList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Dokumen",
        "tags": [
          "Dokumen"
        ]
      }
    },
    "/api/v1/dokumen/{id}": {
      "get": {
        "description": "Use this method to get Dokumen by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dokumen"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Dokumen By ID",
        "tags": [
          "Dokumen"
        ]
      },
      "put": {
        "description": "Use this method to update Dokumen by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dokumen"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dokumen"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Dokumen By ID",
        "tags": [
          "Dokumen"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Dokumen by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dokumen"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dokumen"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Dokumen By ID",
        "tags": [
          "Dokumen"
        ]
      },
      "delete": {
        "description": "Use this method to delete Dokumen by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dokumen"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dokumen"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Dokumen By ID",
        "tags": [
          "Dokumen"
        ]
      }
    },
    "/api/v1/dokumen_map": {
      "post": {
        "description": "Use this method to create DokumenMap",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DokumenMap"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DokumenMap"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create DokumenMap",
        "tags": [
          "DokumenMap"
        ]
      },
      "get": {
        "description": "Use this method to get list of DokumenMap",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DokumenMapList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get DokumenMap",
        "tags": [
          "DokumenMap"
        ]
      }
    },
    "/api/v1/dokumen_map/{id}": {
      "get": {
        "description": "Use this method to get DokumenMap by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DokumenMap"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get DokumenMap By ID",
        "tags": [
          "DokumenMap"
        ]
      },
      "put": {
        "description": "Use this method to update DokumenMap by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DokumenMap"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DokumenMap"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update DokumenMap By ID",
        "tags": [
          "DokumenMap"
        ]
      },
      "patch": {
        "description": "Use this method to partially update DokumenMap by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DokumenMap"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DokumenMap"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update DokumenMap By ID",
        "tags": [
          "DokumenMap"
        ]
      },
      "delete": {
        "description": "Use this method to delete DokumenMap by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DokumenMap"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DokumenMap"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete DokumenMap By ID",
        "tags": [
          "DokumenMap"
        ]
      }
    },
    "/api/v1/elibrary": {
      "post": {
        "description": "Use this method to create Elibrary",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Elibrary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Elibrary"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Elibrary",
        "tags": [
          "Elibrary"
        ]
      },
      "get": {
        "description": "Use this method to get list of Elibrary",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElibraryList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Elibrary",
        "tags": [
          "Elibrary"
        ]
      }
    },
    "/api/v1/elibrary/{id}": {
      "get": {
        "description": "Use this method to get Elibrary by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Elibrary"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Elibrary By ID",
        "tags": [
          "Elibrary"
        ]
      },
      "put": {
        "description": "Use this method to update Elibrary by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Elibrary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Elibrary"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Elibrary By ID",
        "tags": [
          "Elibrary"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Elibrary by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Elibrary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Elibrary"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Elibrary By ID",
        "tags": [
          "Elibrary"
        ]
      },
      "delete": {
        "description": "Use this method to delete Elibrary by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Elibrary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Elibrary"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Elibrary By ID",
        "tags": [
          "Elibrary"
        ]
      }
    },
    "/api/v1/event_materi": {
      "post": {
        "description": "Use this method to create EventMateri",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventMateri"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventMateri"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create EventMateri",
        "tags": [
          "EventMateri"
        ]
      },
      "get": {
        "description": "Use this method to get list of EventMateri",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventMateriList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get EventMateri",
        "tags": [
          "EventMateri"
        ]
      }
    },
    "/api/v1/event_materi/{id}": {
      "get": {
        "description": "Use this method to get EventMateri by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventMateri"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get EventMateri By ID",
        "tags": [
          "EventMateri"
        ]
      },
      "put": {
        "description": "Use this method to update EventMateri by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventMateri"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventMateri"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update EventMateri By ID",
        "tags": [
          "EventMateri"
        ]
      },
      "patch": {
        "description": "Use this method to partially update EventMateri by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventMateri"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventMateri"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update EventMateri By ID",
        "tags": [
          "EventMateri"
        ]
      },
      "delete": {
        "description": "Use this method to delete EventMateri by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventMateri"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventMateri"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete EventMateri By ID",
        "tags": [
          "EventMateri"
        ]
      }
    },
    "/api/v1/events": {
      "post": {
        "description": "Use this method to create Event",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Event",
        "tags": [
          "Event"
        ]
      },
      "get": {
        "description": "Use this method to get list of Event",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Event",
        "tags": [
          "Event"
        ]
      }
    },
    "/api/v1/events/{id}": {
      "get": {
        "description": "Use this method to get Event by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Event By ID",
        "tags": [
          "Event"
        ]
      },
      "put": {
        "description": "Use this method to update Event by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Event By ID",
        "tags": [
          "Event"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Event by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Event By ID",
        "tags": [
          "Event"
        ]
      },
      "delete": {
        "description": "Use this method to delete Event by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Event By ID",
        "tags": [
          "Event"
        ]
      }
    },
    "/api/v1/events/{id}/live_komentar": {
      "get": {
        "description": "Use this method to get Event by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Event By ID",
        "tags": [
          "Event"
        ]
      },
      "post": {
        "description": "Use this method to create Event",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Event",
        "tags": [
          "Event"
        ]
      }
    },
    "/api/v1/forum": {
      "post": {
        "description": "Use this method to create Cop",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Forum"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forum"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Cop",
        "tags": [
          "Cop"
        ]
      },
      "get": {
        "description": "Use this method to get list of Cop",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CopList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Cop",
        "tags": [
          "Cop"
        ]
      }
    },
    "/api/v1/forum/{id}": {
      "get": {
        "description": "Use this method to get Cop by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forum"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Cop By ID",
        "tags": [
          "Cop"
        ]
      },
      "put": {
        "description": "Use this method to update Cop by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Forum"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forum"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Cop By ID",
        "tags": [
          "Cop"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Cop by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Forum"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forum"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Cop By ID",
        "tags": [
          "Cop"
        ]
      },
      "delete": {
        "description": "Use this method to delete Cop by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Forum"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forum"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Cop By ID",
        "tags": [
          "Cop"
        ]
      }
    },
    "/api/v1/forum/{id}/dislike": {
      "post": {
        "description": "Use this method to partially update Dislike by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dislike"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dislike"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Dislike By ID",
        "tags": [
          "Dislike"
        ]
      }
    },
    "/api/v1/forum/{id}/like": {
      "post": {
        "description": "Use this method to partially update Like by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Like"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Like"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Like By ID",
        "tags": [
          "Like"
        ]
      }
    },
    "/api/v1/hadiah": {
      "post": {
        "description": "Use this method to create Hadiah",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Hadiah"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hadiah"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Hadiah",
        "tags": [
          "Hadiah"
        ]
      },
      "get": {
        "description": "Use this method to get list of Hadiah",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HadiahList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Hadiah",
        "tags": [
          "Hadiah"
        ]
      }
    },
    "/api/v1/hadiah/{id}": {
      "get": {
        "description": "Use this method to get Hadiah by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hadiah"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Hadiah By ID",
        "tags": [
          "Hadiah"
        ]
      },
      "put": {
        "description": "Use this method to update Hadiah by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Hadiah"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hadiah"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Hadiah By ID",
        "tags": [
          "Hadiah"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Hadiah by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Hadiah"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hadiah"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Hadiah By ID",
        "tags": [
          "Hadiah"
        ]
      },
      "delete": {
        "description": "Use this method to delete Hadiah by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Hadiah"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hadiah"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Hadiah By ID",
        "tags": [
          "Hadiah"
        ]
      }
    },
    "/api/v1/history_points": {
      "post": {
        "description": "Use this method to create HistoryPoint",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HistoryPoint"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryPoint"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create HistoryPoint",
        "tags": [
          "HistoryPoint"
        ]
      },
      "get": {
        "description": "Use this method to get list of HistoryPoint",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryPointList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get HistoryPoint",
        "tags": [
          "HistoryPoint"
        ]
      }
    },
    "/api/v1/history_points/{id}": {
      "get": {
        "description": "Use this method to get HistoryPoint by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryPoint"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get HistoryPoint By ID",
        "tags": [
          "HistoryPoint"
        ]
      },
      "put": {
        "description": "Use this method to update HistoryPoint by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HistoryPoint"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryPoint"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update HistoryPoint By ID",
        "tags": [
          "HistoryPoint"
        ]
      },
      "patch": {
        "description": "Use this method to partially update HistoryPoint by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HistoryPoint"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryPoint"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update HistoryPoint By ID",
        "tags": [
          "HistoryPoint"
        ]
      },
      "delete": {
        "description": "Use this method to delete HistoryPoint by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HistoryPoint"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryPoint"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete HistoryPoint By ID",
        "tags": [
          "HistoryPoint"
        ]
      }
    },
    "/api/v1/jenis_pengetahuan": {
      "post": {
        "description": "Use this method to create JenisPengetahuan",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JenisPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JenisPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create JenisPengetahuan",
        "tags": [
          "JenisPengetahuan"
        ]
      },
      "get": {
        "description": "Use this method to get list of JenisPengetahuan",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JenisPengetahuanList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get JenisPengetahuan",
        "tags": [
          "JenisPengetahuan"
        ]
      }
    },
    "/api/v1/jenis_pengetahuan/{id}": {
      "get": {
        "description": "Use this method to get JenisPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JenisPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get JenisPengetahuan By ID",
        "tags": [
          "JenisPengetahuan"
        ]
      },
      "put": {
        "description": "Use this method to update JenisPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JenisPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JenisPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update JenisPengetahuan By ID",
        "tags": [
          "JenisPengetahuan"
        ]
      },
      "patch": {
        "description": "Use this method to partially update JenisPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JenisPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JenisPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update JenisPengetahuan By ID",
        "tags": [
          "JenisPengetahuan"
        ]
      },
      "delete": {
        "description": "Use this method to delete JenisPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JenisPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JenisPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete JenisPengetahuan By ID",
        "tags": [
          "JenisPengetahuan"
        ]
      }
    },
    "/api/v1/kategori_buku": {
      "post": {
        "description": "Use this method to create KategoriBuku",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KategoriBuku"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KategoriBuku"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create KategoriBuku",
        "tags": [
          "KategoriBuku"
        ]
      },
      "get": {
        "description": "Use this method to get list of KategoriBuku",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KategoriBukuList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get KategoriBuku",
        "tags": [
          "KategoriBuku"
        ]
      }
    },
    "/api/v1/kategori_buku/{id}": {
      "get": {
        "description": "Use this method to get KategoriBuku by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KategoriBuku"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get KategoriBuku By ID",
        "tags": [
          "KategoriBuku"
        ]
      },
      "put": {
        "description": "Use this method to update KategoriBuku by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KategoriBuku"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KategoriBuku"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update KategoriBuku By ID",
        "tags": [
          "KategoriBuku"
        ]
      },
      "patch": {
        "description": "Use this method to partially update KategoriBuku by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KategoriBuku"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KategoriBuku"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update KategoriBuku By ID",
        "tags": [
          "KategoriBuku"
        ]
      },
      "delete": {
        "description": "Use this method to delete KategoriBuku by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KategoriBuku"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KategoriBuku"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete KategoriBuku By ID",
        "tags": [
          "KategoriBuku"
        ]
      }
    },
    "/api/v1/kategori_pengetahuan": {
      "post": {
        "description": "Use this method to create KategoriPengetahuan",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KategoriPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KategoriPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create KategoriPengetahuan",
        "tags": [
          "KategoriPengetahuan"
        ]
      },
      "get": {
        "description": "Use this method to get list of KategoriPengetahuan",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KategoriPengetahuanList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get KategoriPengetahuan",
        "tags": [
          "KategoriPengetahuan"
        ]
      }
    },
    "/api/v1/kategori_pengetahuan/{id}": {
      "get": {
        "description": "Use this method to get KategoriPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KategoriPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get KategoriPengetahuan By ID",
        "tags": [
          "KategoriPengetahuan"
        ]
      },
      "put": {
        "description": "Use this method to update KategoriPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KategoriPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KategoriPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update KategoriPengetahuan By ID",
        "tags": [
          "KategoriPengetahuan"
        ]
      },
      "patch": {
        "description": "Use this method to partially update KategoriPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KategoriPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KategoriPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update KategoriPengetahuan By ID",
        "tags": [
          "KategoriPengetahuan"
        ]
      },
      "delete": {
        "description": "Use this method to delete KategoriPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KategoriPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KategoriPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete KategoriPengetahuan By ID",
        "tags": [
          "KategoriPengetahuan"
        ]
      }
    },
    "/api/v1/kelompok_dokumen": {
      "post": {
        "description": "Use this method to create KelompokDokumen",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KelompokDokumen"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KelompokDokumen"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create KelompokDokumen",
        "tags": [
          "KelompokDokumen"
        ]
      },
      "get": {
        "description": "Use this method to get list of KelompokDokumen",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KelompokDokumenList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get KelompokDokumen",
        "tags": [
          "KelompokDokumen"
        ]
      }
    },
    "/api/v1/kelompok_dokumen/{id}": {
      "get": {
        "description": "Use this method to get KelompokDokumen by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KelompokDokumen"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get KelompokDokumen By ID",
        "tags": [
          "KelompokDokumen"
        ]
      },
      "put": {
        "description": "Use this method to update KelompokDokumen by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KelompokDokumen"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KelompokDokumen"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update KelompokDokumen By ID",
        "tags": [
          "KelompokDokumen"
        ]
      },
      "patch": {
        "description": "Use this method to partially update KelompokDokumen by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KelompokDokumen"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KelompokDokumen"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update KelompokDokumen By ID",
        "tags": [
          "KelompokDokumen"
        ]
      },
      "delete": {
        "description": "Use this method to delete KelompokDokumen by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KelompokDokumen"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KelompokDokumen"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete KelompokDokumen By ID",
        "tags": [
          "KelompokDokumen"
        ]
      }
    },
    "/api/v1/komentar": {
      "post": {
        "description": "Use this method to create Komentar",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Komentar"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Komentar"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Komentar",
        "tags": [
          "Komentar"
        ]
      },
      "get": {
        "description": "Use this method to get list of Komentar",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KomentarList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Komentar",
        "tags": [
          "Komentar"
        ]
      }
    },
    "/api/v1/komentar/{id}": {
      "get": {
        "description": "Use this method to get Komentar by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Komentar"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Komentar By ID",
        "tags": [
          "Komentar"
        ]
      },
      "put": {
        "description": "Use this method to update Komentar by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Komentar"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Komentar"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Komentar By ID",
        "tags": [
          "Komentar"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Komentar by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Komentar"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Komentar"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Komentar By ID",
        "tags": [
          "Komentar"
        ]
      },
      "delete": {
        "description": "Use this method to delete Komentar by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Komentar"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Komentar"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Komentar By ID",
        "tags": [
          "Komentar"
        ]
      }
    },
    "/api/v1/kompetensi": {
      "get": {
        "description": "Use this method to get list of Kompetensi",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KompetensiList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Kompetensi",
        "tags": [
          "Kompetensi"
        ]
      }
    },
    "/api/v1/kompetensi/{id}": {
      "get": {
        "description": "Use this method to get Kompetensi by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Kompetensi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Kompetensi By ID",
        "tags": [
          "Kompetensi"
        ]
      }
    },
    "/api/v1/leader_talk": {
      "post": {
        "description": "Use this method to create LeaderTalk",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeaderTalk"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderTalk"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create LeaderTalk",
        "tags": [
          "LeaderTalk"
        ]
      },
      "get": {
        "description": "Use this method to get list of LeaderTalk",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderTalkList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get LeaderTalk",
        "tags": [
          "LeaderTalk"
        ]
      }
    },
    "/api/v1/leader_talk/{id}": {
      "get": {
        "description": "Use this method to get LeaderTalk by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderTalk"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get LeaderTalk By ID",
        "tags": [
          "LeaderTalk"
        ]
      },
      "put": {
        "description": "Use this method to update LeaderTalk by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeaderTalk"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderTalk"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update LeaderTalk By ID",
        "tags": [
          "LeaderTalk"
        ]
      },
      "patch": {
        "description": "Use this method to partially update LeaderTalk by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeaderTalk"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderTalk"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update LeaderTalk By ID",
        "tags": [
          "LeaderTalk"
        ]
      },
      "delete": {
        "description": "Use this method to delete LeaderTalk by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeaderTalk"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderTalk"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete LeaderTalk By ID",
        "tags": [
          "LeaderTalk"
        ]
      }
    },
    "/api/v1/leader_talk/{id}/dislike": {
      "post": {
        "description": "Use this method to partially update Dislike by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dislike"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dislike"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Dislike By ID",
        "tags": [
          "Dislike"
        ]
      }
    },
    "/api/v1/leader_talk/{id}/like": {
      "post": {
        "description": "Use this method to partially update Like by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Like"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Like"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Like By ID",
        "tags": [
          "Like"
        ]
      }
    },
    "/api/v1/library_cafe": {
      "post": {
        "description": "Use this method to create LibraryCafe",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LibraryCafe"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LibraryCafe"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create LibraryCafe",
        "tags": [
          "LibraryCafe"
        ]
      },
      "get": {
        "description": "Use this method to get list of LibraryCafe",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LibraryCafeList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get LibraryCafe",
        "tags": [
          "LibraryCafe"
        ]
      }
    },
    "/api/v1/library_cafe/{id}": {
      "get": {
        "description": "Use this method to get LibraryCafe by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LibraryCafe"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get LibraryCafe By ID",
        "tags": [
          "LibraryCafe"
        ]
      },
      "put": {
        "description": "Use this method to update LibraryCafe by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LibraryCafe"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LibraryCafe"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update LibraryCafe By ID",
        "tags": [
          "LibraryCafe"
        ]
      },
      "patch": {
        "description": "Use this method to partially update LibraryCafe by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LibraryCafe"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LibraryCafe"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update LibraryCafe By ID",
        "tags": [
          "LibraryCafe"
        ]
      },
      "delete": {
        "description": "Use this method to delete LibraryCafe by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LibraryCafe"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LibraryCafe"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete LibraryCafe By ID",
        "tags": [
          "LibraryCafe"
        ]
      }
    },
    "/api/v1/library_cafe/{id}/dislike": {
      "post": {
        "description": "Use this method to partially update Dislike by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dislike"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dislike"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Dislike By ID",
        "tags": [
          "Dislike"
        ]
      }
    },
    "/api/v1/library_cafe/{id}/like": {
      "post": {
        "description": "Use this method to partially update Like by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Like"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Like"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Like By ID",
        "tags": [
          "Like"
        ]
      }
    },
    "/api/v1/like": {
      "get": {
        "description": "Use this method to get list of Like",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LikeList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Like",
        "tags": [
          "Like"
        ]
      }
    },
    "/api/v1/like/{id}": {
      "get": {
        "description": "Use this method to get Like by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Like"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Like By ID",
        "tags": [
          "Like"
        ]
      }
    },
    "/api/v1/lingkup_pengetahuan": {
      "post": {
        "description": "Use this method to create LingkupPengetahuan",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LingkupPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LingkupPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create LingkupPengetahuan",
        "tags": [
          "LingkupPengetahuan"
        ]
      },
      "get": {
        "description": "Use this method to get list of LingkupPengetahuan",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LingkupPengetahuanList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get LingkupPengetahuan",
        "tags": [
          "LingkupPengetahuan"
        ]
      }
    },
    "/api/v1/lingkup_pengetahuan/{id}": {
      "get": {
        "description": "Use this method to get LingkupPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LingkupPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get LingkupPengetahuan By ID",
        "tags": [
          "LingkupPengetahuan"
        ]
      },
      "put": {
        "description": "Use this method to update LingkupPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LingkupPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LingkupPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update LingkupPengetahuan By ID",
        "tags": [
          "LingkupPengetahuan"
        ]
      },
      "patch": {
        "description": "Use this method to partially update LingkupPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LingkupPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LingkupPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update LingkupPengetahuan By ID",
        "tags": [
          "LingkupPengetahuan"
        ]
      },
      "delete": {
        "description": "Use this method to delete LingkupPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LingkupPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LingkupPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete LingkupPengetahuan By ID",
        "tags": [
          "LingkupPengetahuan"
        ]
      }
    },
    "/api/v1/login": {
      "post": {
        "description": "Use this method to start login session",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessToken"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Login Session",
        "tags": [
          "Login"
        ]
      }
    },
    "/api/v1/mix_slider": {
      "get": {
        "description": "Use this method to get list of Pengetahuan",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PengetahuanList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Pengetahuan",
        "tags": [
          "Pengetahuan"
        ]
      }
    },
    "/api/v1/notifikasi": {
      "post": {
        "description": "Use this method to create Notifikasi",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Notifikasi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notifikasi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Notifikasi",
        "tags": [
          "Notifikasi"
        ]
      },
      "get": {
        "description": "Use this method to get list of Notifikasi",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotifikasiList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Notifikasi",
        "tags": [
          "Notifikasi"
        ]
      }
    },
    "/api/v1/notifikasi/{id}": {
      "get": {
        "description": "Use this method to get Notifikasi by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notifikasi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Notifikasi By ID",
        "tags": [
          "Notifikasi"
        ]
      },
      "put": {
        "description": "Use this method to update Notifikasi by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Notifikasi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notifikasi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Notifikasi By ID",
        "tags": [
          "Notifikasi"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Notifikasi by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Notifikasi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notifikasi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Notifikasi By ID",
        "tags": [
          "Notifikasi"
        ]
      },
      "delete": {
        "description": "Use this method to delete Notifikasi by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Notifikasi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notifikasi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Notifikasi By ID",
        "tags": [
          "Notifikasi"
        ]
      }
    },
    "/api/v1/orang": {
      "post": {
        "description": "Use this method to create Orang",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Orang"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Orang"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Orang",
        "tags": [
          "Orang"
        ]
      },
      "get": {
        "description": "Use this method to get list of Orang",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrangList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Orang",
        "tags": [
          "Orang"
        ]
      }
    },
    "/api/v1/orang/{id}": {
      "get": {
        "description": "Use this method to get Orang by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Orang"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Orang By ID",
        "tags": [
          "Orang"
        ]
      },
      "put": {
        "description": "Use this method to update Orang by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Orang"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Orang"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Orang By ID",
        "tags": [
          "Orang"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Orang by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Orang"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Orang"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Orang By ID",
        "tags": [
          "Orang"
        ]
      },
      "delete": {
        "description": "Use this method to delete Orang by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Orang"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Orang"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Orang By ID",
        "tags": [
          "Orang"
        ]
      }
    },
    "/api/v1/pedoman": {
      "post": {
        "description": "Use this method to create Pedoman",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pedoman"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pedoman"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Pedoman",
        "tags": [
          "Pedoman"
        ]
      },
      "get": {
        "description": "Use this method to get list of Pedoman",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PedomanList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Pedoman",
        "tags": [
          "Pedoman"
        ]
      }
    },
    "/api/v1/pedoman/{id}": {
      "get": {
        "description": "Use this method to get Pedoman by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pedoman"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Pedoman By ID",
        "tags": [
          "Pedoman"
        ]
      },
      "put": {
        "description": "Use this method to update Pedoman by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pedoman"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pedoman"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Pedoman By ID",
        "tags": [
          "Pedoman"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Pedoman by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pedoman"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pedoman"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Pedoman By ID",
        "tags": [
          "Pedoman"
        ]
      },
      "delete": {
        "description": "Use this method to delete Pedoman by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pedoman"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pedoman"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Pedoman By ID",
        "tags": [
          "Pedoman"
        ]
      }
    },
    "/api/v1/pencapaian": {
      "post": {
        "description": "Use this method to create Pencapaian",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pencapaian"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pencapaian"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Pencapaian",
        "tags": [
          "Pencapaian"
        ]
      },
      "get": {
        "description": "Use this method to get list of Pencapaian",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PencapaianList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Pencapaian",
        "tags": [
          "Pencapaian"
        ]
      }
    },
    "/api/v1/pencapaian/{id}": {
      "get": {
        "description": "Use this method to get Pencapaian by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pencapaian"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Pencapaian By ID",
        "tags": [
          "Pencapaian"
        ]
      }
    },
    "/api/v1/penerbit": {
      "post": {
        "description": "Use this method to create Penerbit",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Penerbit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Penerbit"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Penerbit",
        "tags": [
          "Penerbit"
        ]
      },
      "get": {
        "description": "Use this method to get list of Penerbit",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PenerbitList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Penerbit",
        "tags": [
          "Penerbit"
        ]
      }
    },
    "/api/v1/penerbit/{id}": {
      "get": {
        "description": "Use this method to get Penerbit by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Penerbit"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Penerbit By ID",
        "tags": [
          "Penerbit"
        ]
      },
      "put": {
        "description": "Use this method to update Penerbit by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Penerbit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Penerbit"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Penerbit By ID",
        "tags": [
          "Penerbit"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Penerbit by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Penerbit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Penerbit"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Penerbit By ID",
        "tags": [
          "Penerbit"
        ]
      },
      "delete": {
        "description": "Use this method to delete Penerbit by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Penerbit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Penerbit"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Penerbit By ID",
        "tags": [
          "Penerbit"
        ]
      }
    },
    "/api/v1/pengetahuan": {
      "post": {
        "description": "Use this method to create Pengetahuan",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Pengetahuan",
        "tags": [
          "Pengetahuan"
        ]
      },
      "get": {
        "description": "Use this method to get list of Pengetahuan",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PengetahuanList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Pengetahuan",
        "tags": [
          "Pengetahuan"
        ]
      }
    },
    "/api/v1/pengetahuan/{id}": {
      "get": {
        "description": "Use this method to get Pengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Pengetahuan By ID",
        "tags": [
          "Pengetahuan"
        ]
      },
      "put": {
        "description": "Use this method to update Pengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Pengetahuan By ID",
        "tags": [
          "Pengetahuan"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Pengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Pengetahuan By ID",
        "tags": [
          "Pengetahuan"
        ]
      },
      "delete": {
        "description": "Use this method to delete Pengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Pengetahuan By ID",
        "tags": [
          "Pengetahuan"
        ]
      }
    },
    "/api/v1/pengetahuan/{id}/dislike": {
      "post": {
        "description": "Use this method to partially update Dislike by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dislike"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dislike"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Dislike By ID",
        "tags": [
          "Dislike"
        ]
      }
    },
    "/api/v1/pengetahuan/{id}/like": {
      "post": {
        "description": "Use this method to partially update Like by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Like"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Like"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Like By ID",
        "tags": [
          "Like"
        ]
      }
    },
    "/api/v1/populer_pengetahuan": {
      "get": {
        "description": "Use this method to get list of Pengetahuan",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PengetahuanList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Pengetahuan",
        "tags": [
          "Pengetahuan"
        ]
      }
    },
    "/api/v1/provinsi": {
      "post": {
        "description": "Use this method to create Provinsi",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Provinsi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provinsi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Provinsi",
        "tags": [
          "Provinsi"
        ]
      },
      "get": {
        "description": "Use this method to get list of Provinsi",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProvinsiList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Provinsi",
        "tags": [
          "Provinsi"
        ]
      }
    },
    "/api/v1/provinsi/{id}": {
      "get": {
        "description": "Use this method to get Provinsi by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provinsi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Provinsi By ID",
        "tags": [
          "Provinsi"
        ]
      },
      "put": {
        "description": "Use this method to update Provinsi by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Provinsi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provinsi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Provinsi By ID",
        "tags": [
          "Provinsi"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Provinsi by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Provinsi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provinsi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Provinsi By ID",
        "tags": [
          "Provinsi"
        ]
      },
      "delete": {
        "description": "Use this method to delete Provinsi by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Provinsi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provinsi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Provinsi By ID",
        "tags": [
          "Provinsi"
        ]
      }
    },
    "/api/v1/pulau": {
      "post": {
        "description": "Use this method to create Pulau",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pulau"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pulau"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Pulau",
        "tags": [
          "Pulau"
        ]
      },
      "get": {
        "description": "Use this method to get list of Pulau",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PulauList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Pulau",
        "tags": [
          "Pulau"
        ]
      }
    },
    "/api/v1/pulau/{id}": {
      "get": {
        "description": "Use this method to get Pulau by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pulau"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Pulau By ID",
        "tags": [
          "Pulau"
        ]
      },
      "put": {
        "description": "Use this method to update Pulau by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pulau"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pulau"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Pulau By ID",
        "tags": [
          "Pulau"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Pulau by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pulau"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pulau"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Pulau By ID",
        "tags": [
          "Pulau"
        ]
      },
      "delete": {
        "description": "Use this method to delete Pulau by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pulau"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pulau"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Pulau By ID",
        "tags": [
          "Pulau"
        ]
      }
    },
    "/api/v1/ranking_point": {
      "get": {
        "description": "Use this method to get list of Hadiah",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HadiahList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Hadiah",
        "tags": [
          "Hadiah"
        ]
      }
    },
    "/api/v1/referensi": {
      "post": {
        "description": "Use this method to create Referensi",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Referensi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Referensi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Referensi",
        "tags": [
          "Referensi"
        ]
      },
      "get": {
        "description": "Use this method to get list of Referensi",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferensiList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Referensi",
        "tags": [
          "Referensi"
        ]
      }
    },
    "/api/v1/referensi/{id}": {
      "get": {
        "description": "Use this method to get Referensi by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Referensi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Referensi By ID",
        "tags": [
          "Referensi"
        ]
      },
      "put": {
        "description": "Use this method to update Referensi by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Referensi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Referensi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Referensi By ID",
        "tags": [
          "Referensi"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Referensi by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Referensi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Referensi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Referensi By ID",
        "tags": [
          "Referensi"
        ]
      },
      "delete": {
        "description": "Use this method to delete Referensi by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Referensi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Referensi"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Referensi By ID",
        "tags": [
          "Referensi"
        ]
      }
    },
    "/api/v1/search_forum": {
      "get": {
        "description": "Use this method to get list of Cop",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CopList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Cop",
        "tags": [
          "Cop"
        ]
      }
    },
    "/api/v1/search_pengetahuan": {
      "get": {
        "description": "Use this method to get list of Pengetahuan",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PengetahuanList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Pengetahuan",
        "tags": [
          "Pengetahuan"
        ]
      }
    },
    "/api/v1/session": {
      "get": {
        "description": "Use this method to start login session",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessToken"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Login Session",
        "tags": [
          "Login"
        ]
      }
    },
    "/api/v1/slider_pengetahuan": {
      "get": {
        "description": "Use this method to get list of Pengetahuan",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PengetahuanList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Pengetahuan",
        "tags": [
          "Pengetahuan"
        ]
      }
    },
    "/api/v1/status_pengetahuan": {
      "post": {
        "description": "Use this method to create StatusPengetahuan",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create StatusPengetahuan",
        "tags": [
          "StatusPengetahuan"
        ]
      },
      "get": {
        "description": "Use this method to get list of StatusPengetahuan",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusPengetahuanList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get StatusPengetahuan",
        "tags": [
          "StatusPengetahuan"
        ]
      }
    },
    "/api/v1/status_pengetahuan/{id}": {
      "get": {
        "description": "Use this method to get StatusPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get StatusPengetahuan By ID",
        "tags": [
          "StatusPengetahuan"
        ]
      },
      "put": {
        "description": "Use this method to update StatusPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update StatusPengetahuan By ID",
        "tags": [
          "StatusPengetahuan"
        ]
      },
      "patch": {
        "description": "Use this method to partially update StatusPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update StatusPengetahuan By ID",
        "tags": [
          "StatusPengetahuan"
        ]
      },
      "delete": {
        "description": "Use this method to delete StatusPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete StatusPengetahuan By ID",
        "tags": [
          "StatusPengetahuan"
        ]
      }
    },
    "/api/v1/subjenis_pengetahuan": {
      "post": {
        "description": "Use this method to create SubjenisPengetahuan",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjenisPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjenisPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create SubjenisPengetahuan",
        "tags": [
          "SubjenisPengetahuan"
        ]
      },
      "get": {
        "description": "Use this method to get list of SubjenisPengetahuan",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjenisPengetahuanList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get SubjenisPengetahuan",
        "tags": [
          "SubjenisPengetahuan"
        ]
      }
    },
    "/api/v1/subjenis_pengetahuan/{id}": {
      "get": {
        "description": "Use this method to get SubjenisPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjenisPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get SubjenisPengetahuan By ID",
        "tags": [
          "SubjenisPengetahuan"
        ]
      },
      "put": {
        "description": "Use this method to update SubjenisPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjenisPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjenisPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update SubjenisPengetahuan By ID",
        "tags": [
          "SubjenisPengetahuan"
        ]
      },
      "patch": {
        "description": "Use this method to partially update SubjenisPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjenisPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjenisPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update SubjenisPengetahuan By ID",
        "tags": [
          "SubjenisPengetahuan"
        ]
      },
      "delete": {
        "description": "Use this method to delete SubjenisPengetahuan by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjenisPengetahuan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjenisPengetahuan"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete SubjenisPengetahuan By ID",
        "tags": [
          "SubjenisPengetahuan"
        ]
      }
    },
    "/api/v1/tag": {
      "post": {
        "description": "Use this method to create Tag",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Tag",
        "tags": [
          "Tag"
        ]
      },
      "get": {
        "description": "Use this method to get list of Tag",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Tag",
        "tags": [
          "Tag"
        ]
      }
    },
    "/api/v1/tag/{id}": {
      "get": {
        "description": "Use this method to get Tag by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Tag By ID",
        "tags": [
          "Tag"
        ]
      },
      "put": {
        "description": "Use this method to update Tag by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Tag By ID",
        "tags": [
          "Tag"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Tag by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Tag By ID",
        "tags": [
          "Tag"
        ]
      },
      "delete": {
        "description": "Use this method to delete Tag by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Tag By ID",
        "tags": [
          "Tag"
        ]
      }
    },
    "/api/v1/total_summaries": {
      "get": {
        "description": "Use this method to get list of TotalSummary",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TotalSummaryList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get TotalSummary",
        "tags": [
          "TotalSummary"
        ]
      }
    },
    "/api/v1/user": {
      "post": {
        "description": "Use this method to create User",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create User",
        "tags": [
          "User"
        ]
      },
      "get": {
        "description": "Use this method to get list of User",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get User",
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/user/{id}": {
      "get": {
        "description": "Use this method to get User by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get User By ID",
        "tags": [
          "User"
        ]
      },
      "put": {
        "description": "Use this method to update User by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update User By ID",
        "tags": [
          "User"
        ]
      },
      "patch": {
        "description": "Use this method to partially update User by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update User By ID",
        "tags": [
          "User"
        ]
      },
      "delete": {
        "description": "Use this method to delete User by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete User By ID",
        "tags": [
          "User"
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "headerParam.Accept-Language": {
        "in": "header",
        "name": "Accept-Language",
        "schema": {
          "default": "en-US",
          "enum": [
            "en-US",
            "en",
            "id-ID",
            "id"
          ],
          "type": "string"
        }
      },
      "pathParam.ID": {
        "description": "An ID of the resources",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "queryParam.Any": {
        "explode": true,
        "in": "query",
        "name": "params",
        "schema": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      }
    },
    "schemas": {
      "AccessToken": {
        "properties": {
          "access_token": {
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "expired_at": {
            "format": "date-time",
            "type": "string"
          },
          "following_tags": {
            "items": {
              "properties": {
                "id": {
                  "type": "integer"
                },
                "tag": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "nama": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "ip_address": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "user": {
            "properties": {
              "email": {
                "type": "string"
              },
              "foto": {
                "id": {
                  "type": "integer"
                },
                "properties": {
                  "nama": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "id": {
                "type": "integer"
              },
              "jabatan": {
                "type": "string"
              },
              "jenis": {
                "type": "string"
              },
              "level": {
                "type": "string"
              },
              "nama_lengkap": {
                "type": "string"
              },
              "nama_panggilan": {
                "type": "string"
              },
              "nip": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "status_level": {
                "type": "string"
              },
              "total_point": {
                "type": "integer"
              },
              "unit_kerja": {
                "type": "string"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "AdvisAnalytic": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "dashboard_url": {
            "type": "string"
          },
          "file_url": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "img_url": {
            "type": "string"
          },
          "judul": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "uraian": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdvisAnalyticList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "type": "string"
                },
                "dashboard_url": {
                  "type": "string"
                },
                "file_url": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "img_url": {
                  "type": "string"
                },
                "judul": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "updated_by": {
                  "type": "string"
                },
                "uraian": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AdvisKategori": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "deleted_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "integer"
          },
          "nama_kategori": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "AdvisKategoriList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "deleted_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "nama_kategori": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "updated_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AdvisListData": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "isi_data": {
            "type": "string"
          },
          "nama_data": {
            "type": "string"
          },
          "sub_kategori": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "kategori": {
                "id": {
                  "type": "integer"
                },
                "properties": {
                  "nama": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "nama": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "sumber_data": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "keterangan": {
                "type": "string"
              },
              "nama": {
                "type": "string"
              },
              "singkat": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "url_data": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdvisListDataList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "isi_data": {
                  "type": "string"
                },
                "nama_data": {
                  "type": "string"
                },
                "sub_kategori": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "kategori": {
                      "id": {
                        "type": "integer"
                      },
                      "properties": {
                        "nama": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "nama": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "sumber_data": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "keterangan": {
                      "type": "string"
                    },
                    "nama": {
                      "type": "string"
                    },
                    "singkat": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "updated_by": {
                  "type": "string"
                },
                "url_data": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AdvisSubKategori": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "deleted_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "integer"
          },
          "nama_sub_kategori": {
            "type": "string"
          },
          "ref_kategori_id": {
            "type": "integer"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "AdvisSubKategoriList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "deleted_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "nama_sub_kategori": {
                  "type": "string"
                },
                "ref_kategori_id": {
                  "type": "integer"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "updated_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AdvisSumberData": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "deleted_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "integer"
          },
          "ket_sumber_data": {
            "type": "string"
          },
          "nama_sumber_data": {
            "type": "string"
          },
          "singkat_sumber_data": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "AdvisSumberDataList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "deleted_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "ket_sumber_data": {
                  "type": "string"
                },
                "nama_sumber_data": {
                  "type": "string"
                },
                "singkat_sumber_data": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "updated_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Akademi": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "nama": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AkademiList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "nama": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Attachment": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "deleted_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "extension": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "storage_location": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AttachmentList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "deleted_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "extension": {
                  "type": "string"
                },
                "filename": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "size": {
                  "type": "integer"
                },
                "storage_location": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "updated_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "BannerCarousel": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "deleted_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "integer"
          },
          "image": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "jenis_banner": {
            "type": "string"
          },
          "order": {
            "type": "integer"
          },
          "response_link": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "BannerCarouselList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "deleted_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "image": {
                  "type": "string"
                },
                "is_active": {
                  "type": "boolean"
                },
                "jenis_banner": {
                  "type": "string"
                },
                "order": {
                  "type": "integer"
                },
                "response_link": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "updated_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CopList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "akademi_knowledge": {
                  "type": "string"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "properties": {
                    "foto": {
                      "nama": {
                        "type": "string"
                      },
                      "properties": {
                        "id": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "deleted_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "deskripsi": {
                  "type": "string"
                },
                "dokumen": {
                  "properties": {
                    "filename": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "gambar": {
                  "properties": {
                    "filename": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "judul": {
                  "type": "string"
                },
                "kategori": {
                  "type": "string"
                },
                "statistik": {
                  "properties": {
                    "dislike": {
                      "type": "integer"
                    },
                    "komentar": {
                      "type": "integer"
                    },
                    "like": {
                      "type": "integer"
                    },
                    "view": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "topik": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "updated_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Dislike": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "forum": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "integer"
          },
          "leader_talk": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "library_cafe": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "pengetahuan": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "user": {
            "properties": {
              "email": {
                "type": "string"
              },
              "foto": {
                "properties": {
                  "nama": {
                    "type": "string"
                  }
                },
                "type": "object",
                "url": {
                  "type": "string"
                }
              },
              "id": {
                "type": "integer"
              },
              "jabatan": {
                "type": "string"
              },
              "nama_lengkap": {
                "type": "string"
              },
              "nama_panggilan": {
                "type": "string"
              },
              "nip": {
                "type": "string"
              },
              "status_level": {
                "type": "string"
              },
              "unit_kerja": {
                "type": "string"
              },
              "user_level": {
                "type": "string"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "DislikeList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "forum": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "leader_talk": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "library_cafe": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "pengetahuan": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "user": {
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "foto": {
                      "id": {
                        "type": "integer"
                      },
                      "properties": {
                        "nama": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "jabatan": {
                      "type": "string"
                    },
                    "nama_lengkap": {
                      "type": "string"
                    },
                    "nama_panggilan": {
                      "type": "string"
                    },
                    "nip": {
                      "type": "string"
                    },
                    "status_level": {
                      "type": "string"
                    },
                    "unit_kerja": {
                      "type": "string"
                    },
                    "user_level": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Dokumen": {
        "properties": {
          "attachment_id": {
            "type": "integer"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "deleted_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "integer"
          },
          "isi_dokumen": {
            "type": "string"
          },
          "judul_dokumen": {
            "type": "string"
          },
          "kategori_pengetahuan_id": {
            "type": "integer"
          },
          "kelompok_dokumen_id": {
            "type": "integer"
          },
          "nama_pengarang": {
            "type": "string"
          },
          "nomor_dokumen": {
            "type": "string"
          },
          "penerbit": {
            "type": "string"
          },
          "tanggal_dokumen": {
            "format": "date",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "DokumenList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "attachment_id": {
                  "type": "integer"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "deleted_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "isi_dokumen": {
                  "type": "string"
                },
                "judul_dokumen": {
                  "type": "string"
                },
                "kategori_pengetahuan_id": {
                  "type": "integer"
                },
                "kelompok_dokumen_id": {
                  "type": "integer"
                },
                "nama_pengarang": {
                  "type": "string"
                },
                "nomor_dokumen": {
                  "type": "string"
                },
                "penerbit": {
                  "type": "string"
                },
                "tanggal_dokumen": {
                  "format": "date",
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "updated_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DokumenMap": {
        "properties": {
          "broadcast": {
            "properties": {
              "end": {
                "format": "date",
                "type": "string"
              },
              "start": {
                "format": "date",
                "type": "string"
              },
              "status": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "deleted_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "dokumen": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "nama": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "integer"
          },
          "pengetahuan": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "DokumenMapList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "broadcast": {
                  "properties": {
                    "end": {
                      "format": "date",
                      "type": "string"
                    },
                    "start": {
                      "format": "date",
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "deleted_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "dokumen": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "nama": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "pengetahuan": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "updated_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Elibrary": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "deleted_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "dokumen": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "nama": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "gambar": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "nama": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "integer"
          },
          "isi_buku": {
            "type": "string"
          },
          "judul_buku": {
            "type": "string"
          },
          "kategori_buku": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "nama": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "lokasi_gedung": {
            "type": "string"
          },
          "pengarang": {
            "type": "string"
          },
          "ruangan": {
            "type": "string"
          },
          "statistik": {
            "properties": {
              "komentar": {
                "type": "integer"
              },
              "view": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "unit_kerja": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "ElibraryList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "deleted_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "dokumen": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "nama": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "gambar": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "nama": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "isi_buku": {
                  "type": "string"
                },
                "judul_buku": {
                  "type": "string"
                },
                "kategori_buku": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "nama": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "lokasi_gedung": {
                  "type": "string"
                },
                "pengarang": {
                  "type": "string"
                },
                "ruangan": {
                  "type": "string"
                },
                "statistik": {
                  "properties": {
                    "komentar": {
                      "type": "integer"
                    },
                    "view": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "unit_kerja": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "updated_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Error.BadRequest": {
        "properties": {
          "error": {
            "properties": {
              "code": {
                "example": 400,
                "format": "int32",
                "type": "integer"
              },
              "message": {
                "example": "The request cannot be performed because of malformed or missing parameters.",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Error.Forbidden": {
        "properties": {
          "error": {
            "properties": {
              "code": {
                "example": 403,
                "format": "int32",
                "type": "integer"
              },
              "message": {
                "example": "The user does not have permission to access the resource.",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Error.Unauthorized": {
        "properties": {
          "error": {
            "properties": {
              "code": {
                "example": 401,
                "format": "int32",
                "type": "integer"
              },
              "message": {
                "example": "Invalid authentication token.",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Event": {
        "properties": {
          "akses_kegiatan": {
            "type": "string"
          },
          "attachment": {
            "properties": {
              "filename": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "deleted_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "integer"
          },
          "lingkup": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "nama": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "live_komentar": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "komentar": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "lokasi": {
            "type": "string"
          },
          "materi": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "dokumen": {
                  "items": {
                    "properties": {},
                    "type": "object"
                  },
                  "type": "array"
                },
                "event": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "isi_dokumen": {
                  "type": "string"
                },
                "judul_dokumen": {
                  "type": "string"
                },
                "kelompok_dokumen": {
                  "type": "string"
                },
                "kelompok_pengetahuan": {
                  "type": "string"
                },
                "nama_pengarang": {
                  "type": "string"
                },
                "nomor_dokumen": {
                  "type": "string"
                },
                "penerbit": {
                  "type": "string"
                },
                "tanggal_dokumen": {
                  "format": "date",
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "nama": {
            "type": "string"
          },
          "other_attachments": {
            "items": {
              "properties": {
                "extension": {
                  "type": "string"
                },
                "filename": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "size": {
                  "type": "integer"
                },
                "storage_location": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "tanggal_mulai": {
            "format": "date",
            "type": "string"
          },
          "tanggal_selesai": {
            "format": "date",
            "type": "string"
          },
          "unit_kerja": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "uraian": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "EventList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "akses_kegiatan": {
                  "type": "string"
                },
                "attachment": {
                  "properties": {
                    "filename": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "deleted_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "lingkup": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "nama": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "live_komentar": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "created_by": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "username": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "komentar": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "lokasi": {
                  "type": "string"
                },
                "materi": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "created_by": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "username": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "dokumen": {
                        "items": {
                          "properties": {},
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "event": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "isi_dokumen": {
                        "type": "string"
                      },
                      "judul_dokumen": {
                        "type": "string"
                      },
                      "kelompok_dokumen": {
                        "type": "string"
                      },
                      "kelompok_pengetahuan": {
                        "type": "string"
                      },
                      "nama_pengarang": {
                        "type": "string"
                      },
                      "nomor_dokumen": {
                        "type": "string"
                      },
                      "penerbit": {
                        "type": "string"
                      },
                      "tanggal_dokumen": {
                        "format": "date",
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "nama": {
                  "type": "string"
                },
                "other_attachments": {
                  "items": {
                    "properties": {
                      "extension": {
                        "type": "string"
                      },
                      "filename": {
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "size": {
                        "type": "integer"
                      },
                      "storage_location": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "tanggal_mulai": {
                  "format": "date",
                  "type": "string"
                },
                "tanggal_selesai": {
                  "format": "date",
                  "type": "string"
                },
                "unit_kerja": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "updated_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "uraian": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EventMateri": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "dokumen": {
            "items": {
              "properties": {},
              "type": "object"
            },
            "type": "array"
          },
          "event": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "integer"
          },
          "isi_dokumen": {
            "type": "string"
          },
          "judul_dokumen": {
            "type": "string"
          },
          "kelompok_dokumen": {
            "type": "string"
          },
          "kelompok_pengetahuan": {
            "type": "string"
          },
          "nama_pengarang": {
            "type": "string"
          },
          "nomor_dokumen": {
            "type": "string"
          },
          "penerbit": {
            "type": "string"
          },
          "tanggal_dokumen": {
            "format": "date",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EventMateriList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "dokumen": {
                  "items": {
                    "properties": {},
                    "type": "object"
                  },
                  "type": "array"
                },
                "event": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "isi_dokumen": {
                  "type": "string"
                },
                "judul_dokumen": {
                  "type": "string"
                },
                "kelompok_dokumen": {
                  "type": "string"
                },
                "kelompok_pengetahuan": {
                  "type": "string"
                },
                "nama_pengarang": {
                  "type": "string"
                },
                "nomor_dokumen": {
                  "type": "string"
                },
                "penerbit": {
                  "type": "string"
                },
                "tanggal_dokumen": {
                  "format": "date",
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Forum": {
        "properties": {
          "akademi_knowledge": {
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "properties": {
              "foto": {
                "properties": {
                  "nama": {
                    "type": "string"
                  }
                },
                "type": "object",
                "url": {
                  "type": "string"
                }
              },
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "deleted_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "deskripsi": {
            "type": "string"
          },
          "dokumen": {
            "properties": {
              "filename": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "gambar": {
            "properties": {
              "filename": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "integer"
          },
          "judul": {
            "type": "string"
          },
          "kategori": {
            "type": "string"
          },
          "statistik": {
            "properties": {
              "dislike": {
                "type": "integer"
              },
              "komentar": {
                "type": "integer"
              },
              "like": {
                "type": "integer"
              },
              "view": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "topik": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Hadiah": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "deleted_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "deskripsi": {
            "type": "string"
          },
          "gambar": {
            "properties": {
              "filename": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "integer"
          },
          "is_active": {
            "type": "boolean"
          },
          "nama": {
            "type": "string"
          },
          "point": {
            "type": "integer"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "HadiahList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "deleted_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "deskripsi": {
                  "type": "string"
                },
                "gambar": {
                  "properties": {
                    "filename": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "is_active": {
                  "type": "boolean"
                },
                "nama": {
                  "type": "string"
                },
                "point": {
                  "type": "integer"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "updated_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "HistoryPoint": {
        "properties": {
          "adjustment_point": {
            "type": "integer"
          },
          "after": {
            "type": "integer"
          },
          "before": {
            "type": "integer"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "deleted_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "integer"
          },
          "pencapaian": {
            "properties": {
              "hadiah": {
                "gambar": {
                  "properties": {
                    "filename": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "properties": {
                  "nama": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "id": {
                "type": "integer"
              },
              "tanggal": {
                "format": "date-time",
                "type": "string"
              }
            },
            "type": "object"
          },
          "pengetahuan": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "jenis_pengetahuan": {
                "id": {
                  "type": "integer"
                },
                "properties": {
                  "nama": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "judul": {
                "type": "string"
              },
              "lingkup_pengetahuan": {
                "nama": {
                  "type": "string"
                },
                "properties": {
                  "id": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "ringkasan": {
                "type": "string"
              },
              "status_pengetahuan": {
                "id": {
                  "type": "integer"
                },
                "properties": {
                  "nama": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "subjenis_pengetahuan": {
                "nama": {
                  "type": "string"
                },
                "properties": {
                  "id": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "thumbnail": {
                "nama": {
                  "type": "string"
                },
                "properties": {
                  "id": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "user": {
            "properties": {
              "email": {
                "type": "string"
              },
              "foto": {
                "id": {
                  "type": "integer"
                },
                "properties": {
                  "url": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "id": {
                "type": "integer"
              },
              "jabatan": {
                "type": "string"
              },
              "jenis": {
                "type": "string"
              },
              "level": {
                "type": "string"
              },
              "nama_lengkap": {
                "type": "string"
              },
              "nama_panggilan": {
                "type": "string"
              },
              "nip": {
                "type": "string"
              },
              "orang": {
                "properties": {
                  "id": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "status_level": {
                "type": "string"
              },
              "unit_kerja": {
                "type": "string"
              },
              "user_level": {
                "type": "string"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "HistoryPointList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "adjustment_point": {
                  "type": "integer"
                },
                "after": {
                  "type": "integer"
                },
                "before": {
                  "type": "integer"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "deleted_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "pencapaian": {
                  "properties": {
                    "hadiah": {
                      "gambar": {
                        "properties": {
                          "filename": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "properties": {
                        "gambar": {
                          "properties": {
                            "url": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "tanggal": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "pengetahuan": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "jenis_pengetahuan": {
                      "nama": {
                        "type": "string"
                      },
                      "properties": {
                        "id": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "judul": {
                      "type": "string"
                    },
                    "lingkup_pengetahuan": {
                      "nama": {
                        "type": "string"
                      },
                      "properties": {
                        "id": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "ringkasan": {
                      "type": "string"
                    },
                    "status_pengetahuan": {
                      "nama": {
                        "type": "string"
                      },
                      "properties": {
                        "id": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "subjenis_pengetahuan": {
                      "nama": {
                        "type": "string"
                      },
                      "properties": {
                        "id": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "thumbnail": {
                      "properties": {
                        "nama": {
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "url": {
                        "type": "string"
                      }
                    }
                  },
                  "type": "object"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "updated_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "user": {
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "foto": {
                      "id": {
                        "type": "integer"
                      },
                      "properties": {
                        "nama": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "jabatan": {
                      "type": "string"
                    },
                    "jenis": {
                      "type": "string"
                    },
                    "level": {
                      "type": "string"
                    },
                    "nama_lengkap": {
                      "type": "string"
                    },
                    "nama_panggilan": {
                      "type": "string"
                    },
                    "nip": {
                      "type": "string"
                    },
                    "orang": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "status_level": {
                      "type": "string"
                    },
                    "unit_kerja": {
                      "type": "string"
                    },
                    "user_level": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "JenisPengetahuan": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "nama": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "JenisPengetahuanList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "nama": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "KategoriBuku": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "deleted_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "integer"
          },
          "nama": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "KategoriBukuList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "deleted_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "nama": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "updated_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "KategoriPengetahuan": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "deleted_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "integer"
          },
          "nama": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "KategoriPengetahuanList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "deleted_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "nama": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "updated_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "KelompokDokumen": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "deleted_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "integer"
          },
          "nama": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "KelompokDokumenList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "deleted_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "nama": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "updated_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Komentar": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "elibrary": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "forum": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "integer"
          },
          "komentar": {
            "type": "string"
          },
          "leader_talk": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "library_cafe": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "parent_komentar": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "komentar": {
                "type": "string"
              },
              "status": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "pengetahuan": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "status": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "user": {
            "properties": {
              "email": {
                "type": "string"
              },
              "foto": {
                "id": {
                  "type": "integer"
                },
                "properties": {
                  "url": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "id": {
                "type": "integer"
              },
              "jabatan": {
                "type": "string"
              },
              "nama_lengkap": {
                "type": "string"
              },
              "nama_panggilan": {
                "type": "string"
              },
              "nip": {
                "type": "string"
              },
              "status_level": {
                "type": "string"
              },
              "unit_kerja": {
                "type": "string"
              },
              "user_level": {
                "type": "string"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "KomentarList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "elibrary": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "forum": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "komentar": {
                  "type": "string"
                },
                "leader_talk": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "library_cafe": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "parent_komentar": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "komentar": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "pengetahuan": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "user": {
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "foto": {
                      "id": {
                        "type": "integer"
                      },
                      "properties": {
                        "url": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "jabatan": {
                      "type": "string"
                    },
                    "nama_lengkap": {
                      "type": "string"
                    },
                    "nama_panggilan": {
                      "type": "string"
                    },
                    "nip": {
                      "type": "string"
                    },
                    "status_level": {
                      "type": "string"
                    },
                    "unit_kerja": {
                      "type": "string"
                    },
                    "user_level": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Kompetensi": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "id_kategori_kms": {
            "type": "integer"
          },
          "id_kompetensi_sdm": {
            "type": "integer"
          },
          "id_mapping": {
            "type": "integer"
          },
          "nama": {
            "type": "string"
          },
          "nama_kategori_kms": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "KompetensiList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "id_kategori_kms": {
                  "type": "integer"
                },
                "id_kompetensi_sdm": {
                  "type": "integer"
                },
                "id_mapping": {
                  "type": "integer"
                },
                "nama": {
                  "type": "string"
                },
                "nama_kategori_kms": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "LeaderTalk": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "deleted_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "dokumen": {
            "properties": {
              "filename": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "integer"
          },
          "isi_dokumen": {
            "type": "string"
          },
          "jabatan": {
            "type": "string"
          },
          "nama": {
            "type": "string"
          },
          "nama_kegiatan": {
            "type": "string"
          },
          "statistik": {
            "properties": {
              "dislike": {
                "type": "integer"
              },
              "komentar": {
                "type": "integer"
              },
              "like": {
                "type": "integer"
              },
              "view": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "LeaderTalkList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "deleted_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "dokumen": {
                  "properties": {
                    "filename": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "isi_dokumen": {
                  "type": "string"
                },
                "jabatan": {
                  "type": "string"
                },
                "nama": {
                  "type": "string"
                },
                "nama_kegiatan": {
                  "type": "string"
                },
                "statistik": {
                  "properties": {
                    "dislike": {
                      "type": "integer"
                    },
                    "komentar": {
                      "type": "integer"
                    },
                    "like": {
                      "type": "integer"
                    },
                    "view": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "updated_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "LibraryCafe": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "deleted_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "deskripsi": {
            "type": "string"
          },
          "dokumen": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "nama": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "gambar": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "nama": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "integer"
          },
          "judul_kegiatan": {
            "type": "string"
          },
          "link_kegiatan": {
            "type": "string"
          },
          "nama_penyelenggara": {
            "type": "string"
          },
          "statistik": {
            "properties": {
              "dislike": {
                "type": "integer"
              },
              "komentar": {
                "type": "integer"
              },
              "like": {
                "type": "integer"
              },
              "view": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "LibraryCafeList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "deleted_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "deskripsi": {
                  "type": "string"
                },
                "dokumen": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "nama": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "gambar": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "nama": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "judul_kegiatan": {
                  "type": "string"
                },
                "link_kegiatan": {
                  "type": "string"
                },
                "nama_penyelenggara": {
                  "type": "string"
                },
                "statistik": {
                  "properties": {
                    "dislike": {
                      "type": "integer"
                    },
                    "komentar": {
                      "type": "integer"
                    },
                    "like": {
                      "type": "integer"
                    },
                    "view": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "updated_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Like": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "forum": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "integer"
          },
          "leader_talk": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "library_cafe": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "pengetahuan": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "user": {
            "properties": {
              "email": {
                "type": "string"
              },
              "foto": {
                "properties": {
                  "nama": {
                    "type": "string"
                  }
                },
                "type": "object",
                "url": {
                  "type": "string"
                }
              },
              "id": {
                "type": "integer"
              },
              "jabatan": {
                "type": "string"
              },
              "nama_lengkap": {
                "type": "string"
              },
              "nama_panggilan": {
                "type": "string"
              },
              "nip": {
                "type": "string"
              },
              "status_level": {
                "type": "string"
              },
              "unit_kerja": {
                "type": "string"
              },
              "user_level": {
                "type": "string"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "LikeList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "forum": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "leader_talk": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "library_cafe": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "pengetahuan": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "user": {
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "foto": {
                      "nama": {
                        "type": "string"
                      },
                      "properties": {
                        "id": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "jabatan": {
                      "type": "string"
                    },
                    "nama_lengkap": {
                      "type": "string"
                    },
                    "nama_panggilan": {
                      "type": "string"
                    },
                    "nip": {
                      "type": "string"
                    },
                    "status_level": {
                      "type": "string"
                    },
                    "unit_kerja": {
                      "type": "string"
                    },
                    "user_level": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "LingkupPengetahuan": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "nama": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LingkupPengetahuanList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "nama": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Login": {
        "properties": {
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Notifikasi": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "data": {
            "type": "string"
          },
          "data_id": {
            "type": "integer"
          },
          "deleted_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "deskripsi": {
            "type": "string"
          },
          "endpoint": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "is_read": {
            "type": "boolean"
          },
          "judul": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "user_id": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NotifikasiList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "data": {
                  "type": "string"
                },
                "data_id": {
                  "type": "integer"
                },
                "deleted_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "deskripsi": {
                  "type": "string"
                },
                "endpoint": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "is_read": {
                  "type": "boolean"
                },
                "judul": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "updated_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "user_id": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Orang": {
        "properties": {
          "alamat": {
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "type": "integer"
          },
          "deleted_by": {
            "type": "integer"
          },
          "email": {
            "format": "email",
            "type": "string"
          },
          "foto": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "nama": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "integer"
          },
          "jabatan": {
            "type": "string"
          },
          "jenis_kelamin": {
            "type": "string"
          },
          "nama_lengkap": {
            "type": "string"
          },
          "nama_panggilan": {
            "type": "string"
          },
          "nik": {
            "type": "string"
          },
          "nip": {
            "type": "string"
          },
          "status_level": {
            "type": "string"
          },
          "telp": {
            "type": "string"
          },
          "tempat_lahir": {
            "type": "string"
          },
          "tgl_lahir": {
            "format": "date",
            "type": "string"
          },
          "unit_kerja": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_by": {
            "type": "integer"
          },
          "user_level": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrangList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "alamat": {
                  "type": "string"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "type": "integer"
                },
                "deleted_by": {
                  "type": "integer"
                },
                "email": {
                  "format": "email",
                  "type": "string"
                },
                "foto": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "nama": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "jabatan": {
                  "type": "string"
                },
                "jenis_kelamin": {
                  "type": "string"
                },
                "nama_lengkap": {
                  "type": "string"
                },
                "nama_panggilan": {
                  "type": "string"
                },
                "nik": {
                  "type": "string"
                },
                "nip": {
                  "type": "string"
                },
                "status_level": {
                  "type": "string"
                },
                "telp": {
                  "type": "string"
                },
                "tempat_lahir": {
                  "type": "string"
                },
                "tgl_lahir": {
                  "format": "date",
                  "type": "string"
                },
                "unit_kerja": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "updated_by": {
                  "type": "integer"
                },
                "user_level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Pedoman": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "data": {
            "type": "string"
          },
          "deleted_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "integer"
          },
          "nama": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "PedomanList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "data": {
                  "type": "string"
                },
                "deleted_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "nama": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "updated_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Pencapaian": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "deleted_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "hadiah": {
            "properties": {
              "deskripsi": {
                "type": "string"
              },
              "gambar": {
                "properties": {
                  "filename": {
                    "type": "string"
                  }
                },
                "type": "object",
                "url": {
                  "type": "string"
                }
              },
              "id": {
                "type": "integer"
              },
              "is_active": {
                "type": "boolean"
              },
              "nama": {
                "type": "string"
              },
              "point": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "integer"
          },
          "tanggal": {
            "format": "date-time",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "user": {
            "properties": {
              "email": {
                "type": "string"
              },
              "foto": {
                "id": {
                  "type": "integer"
                },
                "properties": {
                  "url": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "id": {
                "type": "integer"
              },
              "jabatan": {
                "type": "string"
              },
              "jenis": {
                "type": "string"
              },
              "level": {
                "type": "string"
              },
              "nama_lengkap": {
                "type": "string"
              },
              "nama_panggilan": {
                "type": "string"
              },
              "nip": {
                "type": "string"
              },
              "orang": {
                "properties": {
                  "id": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "status_level": {
                "type": "string"
              },
              "unit_kerja": {
                "type": "string"
              },
              "user_level": {
                "type": "string"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "PencapaianList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "deleted_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "hadiah": {
                  "properties": {
                    "deskripsi": {
                      "type": "string"
                    },
                    "gambar": {
                      "filename": {
                        "type": "string"
                      },
                      "properties": {
                        "url": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "is_active": {
                      "type": "boolean"
                    },
                    "nama": {
                      "type": "string"
                    },
                    "point": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "tanggal": {
                  "format": "date-time",
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "updated_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "user": {
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "foto": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        }
                      },
                      "type": "object",
                      "url": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "integer"
                    },
                    "jabatan": {
                      "type": "string"
                    },
                    "jenis": {
                      "type": "string"
                    },
                    "level": {
                      "type": "string"
                    },
                    "nama_lengkap": {
                      "type": "string"
                    },
                    "nama_panggilan": {
                      "type": "string"
                    },
                    "nip": {
                      "type": "string"
                    },
                    "orang": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "status_level": {
                      "type": "string"
                    },
                    "unit_kerja": {
                      "type": "string"
                    },
                    "user_level": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Penerbit": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "nama": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PenerbitList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "nama": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Pengetahuan": {
        "properties": {
          "akademi": {
            "items": {
              "properties": {
                "id": {
                  "type": "integer"
                },
                "nama": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "properties": {
              "foto": {
                "nama": {
                  "type": "string"
                },
                "properties": {
                  "id": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "dampak": {
            "type": "string"
          },
          "dasar_hukum": {
            "type": "string"
          },
          "data_digunakan": {
            "type": "string"
          },
          "deleted_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "dokumen": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "nama": {
                  "type": "string"
                },
                "pengetahuan_dokumen": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "hipotesis": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "jenis_pengetahuan": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "nama": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "judul": {
            "type": "string"
          },
          "jumlah_halaman": {
            "type": "integer"
          },
          "keahlian_dibutuhkan": {
            "type": "string"
          },
          "kesimpulan_rekomendasi": {
            "type": "string"
          },
          "kompetensi": {
            "items": {
              "properties": {
                "id": {
                  "type": "integer"
                },
                "nama": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "latar_belakang": {
            "type": "string"
          },
          "lesson_learned": {
            "type": "string"
          },
          "lingkup_pengetahuan": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "nama": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "masalah": {
            "type": "string"
          },
          "metode_pengawasan": {
            "type": "string"
          },
          "narasumber": {
            "items": {
              "properties": {
                "alamat": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "foto": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "nama": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "jabatan": {
                  "type": "string"
                },
                "jenis_kelamin": {
                  "type": "string"
                },
                "nama_lengkap": {
                  "type": "string"
                },
                "nama_panggilan": {
                  "type": "string"
                },
                "nik": {
                  "type": "string"
                },
                "nip": {
                  "type": "string"
                },
                "telp": {
                  "type": "string"
                },
                "tempat_lahir": {
                  "type": "string"
                },
                "tgl_lahir": {
                  "format": "date",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "pedoman": {
            "items": {
              "properties": {
                "data": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "nama": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "pembahasan": {
            "type": "string"
          },
          "penelitian_terdahulu": {
            "type": "string"
          },
          "penerbit": {
            "items": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "nama": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "pengujian": {
            "type": "string"
          },
          "penulis_1": {
            "properties": {
              "foto": {
                "properties": {
                  "nama": {
                    "type": "string"
                  }
                },
                "type": "object",
                "url": {
                  "type": "string"
                }
              },
              "id": {
                "type": "integer"
              },
              "jabatan": {
                "type": "string"
              },
              "nama": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "penulis_2": {
            "properties": {
              "foto": {
                "properties": {
                  "id": {
                    "type": "string"
                  }
                },
                "type": "object",
                "url": {
                  "type": "string"
                }
              },
              "id": {
                "type": "integer"
              },
              "jabatan": {
                "type": "string"
              },
              "nama": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "penulis_3": {
            "properties": {
              "foto": {
                "id": {
                  "type": "string"
                },
                "properties": {
                  "url": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "id": {
                "type": "integer"
              },
              "jabatan": {
                "type": "string"
              },
              "nama": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "penulis_external": {
            "items": {
              "properties": {
                "asal_instansi": {
                  "type": "string"
                },
                "nama_penulis_external": {
                  "type": "string"
                },
                "nik": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "penyebab": {
            "type": "string"
          },
          "proses_bisnis": {
            "type": "string"
          },
          "referensi": {
            "items": {
              "properties": {
                "id": {
                  "type": "integer"
                },
                "nama": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "ringkasan": {
            "type": "string"
          },
          "risiko_objek_pengawasan": {
            "type": "string"
          },
          "rumusan_masalah": {
            "type": "string"
          },
          "solusi": {
            "type": "string"
          },
          "statistik": {
            "properties": {
              "dislike": {
                "type": "integer"
              },
              "komentar": {
                "type": "integer"
              },
              "like": {
                "type": "integer"
              },
              "view": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "status_pengetahuan": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "nama": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "subjenis_pengetahuan": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "is_show": {
                "type": "boolean"
              },
              "nama": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "syarat_hasil": {
            "type": "string"
          },
          "tag": {
            "items": {
              "properties": {
                "id": {
                  "type": "integer"
                },
                "nama": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "tahun_terbit": {
            "type": "integer"
          },
          "temuan_material": {
            "type": "string"
          },
          "tenaga_ahli": {
            "items": {
              "properties": {
                "email": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "jabatan": {
                  "type": "string"
                },
                "nama_lengkap": {
                  "type": "string"
                },
                "nip": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "thumbnail": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "nama": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "tujuan": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "PengetahuanList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "akademi": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "nama": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "properties": {
                    "foto": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        }
                      },
                      "type": "object",
                      "url": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "dampak": {
                  "type": "string"
                },
                "dasar_hukum": {
                  "type": "string"
                },
                "data_digunakan": {
                  "type": "string"
                },
                "deleted_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "dokumen": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "created_by": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "nama": {
                        "type": "string"
                      },
                      "pengetahuan_dokumen": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "hipotesis": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "jenis_pengetahuan": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "nama": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "judul": {
                  "type": "string"
                },
                "jumlah_halaman": {
                  "type": "integer"
                },
                "keahlian_dibutuhkan": {
                  "type": "string"
                },
                "kesimpulan_rekomendasi": {
                  "type": "string"
                },
                "kompetensi": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "nama": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "latar_belakang": {
                  "type": "string"
                },
                "lesson_learned": {
                  "type": "string"
                },
                "lingkup_pengetahuan": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "nama": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "masalah": {
                  "type": "string"
                },
                "metode_pengawasan": {
                  "type": "string"
                },
                "narasumber": {
                  "items": {
                    "properties": {
                      "alamat": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "foto": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "nama": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "jabatan": {
                        "type": "string"
                      },
                      "jenis_kelamin": {
                        "type": "string"
                      },
                      "nama_lengkap": {
                        "type": "string"
                      },
                      "nama_panggilan": {
                        "type": "string"
                      },
                      "nik": {
                        "type": "string"
                      },
                      "nip": {
                        "type": "string"
                      },
                      "telp": {
                        "type": "string"
                      },
                      "tempat_lahir": {
                        "type": "string"
                      },
                      "tgl_lahir": {
                        "format": "date",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "pedoman": {
                  "items": {
                    "properties": {
                      "data": {
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "nama": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "pembahasan": {
                  "type": "string"
                },
                "penelitian_terdahulu": {
                  "type": "string"
                },
                "penerbit": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "nama": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "pengujian": {
                  "type": "string"
                },
                "penulis_1": {
                  "properties": {
                    "foto": {
                      "id": {
                        "type": "string"
                      },
                      "properties": {
                        "url": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "jabatan": {
                      "type": "string"
                    },
                    "nama": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "penulis_2": {
                  "properties": {
                    "foto": {
                      "nama": {
                        "type": "string"
                      },
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "jabatan": {
                      "type": "string"
                    },
                    "nama": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "penulis_3": {
                  "properties": {
                    "foto": {
                      "nama": {
                        "type": "string"
                      },
                      "properties": {
                        "url": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "jabatan": {
                      "type": "string"
                    },
                    "nama": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "penulis_external": {
                  "items": {
                    "properties": {
                      "asal_instansi": {
                        "type": "string"
                      },
                      "nama_penulis_external": {
                        "type": "string"
                      },
                      "nik": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "penyebab": {
                  "type": "string"
                },
                "proses_bisnis": {
                  "type": "string"
                },
                "referensi": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "nama": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "ringkasan": {
                  "type": "string"
                },
                "risiko_objek_pengawasan": {
                  "type": "string"
                },
                "rumusan_masalah": {
                  "type": "string"
                },
                "solusi": {
                  "type": "string"
                },
                "statistik": {
                  "properties": {
                    "dislike": {
                      "type": "integer"
                    },
                    "komentar": {
                      "type": "integer"
                    },
                    "like": {
                      "type": "integer"
                    },
                    "view": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "status_pengetahuan": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "nama": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "subjenis_pengetahuan": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "is_show": {
                      "type": "boolean"
                    },
                    "nama": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "syarat_hasil": {
                  "type": "string"
                },
                "tag": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "nama": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "tahun_terbit": {
                  "type": "integer"
                },
                "temuan_material": {
                  "type": "string"
                },
                "tenaga_ahli": {
                  "items": {
                    "properties": {
                      "email": {
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "jabatan": {
                        "type": "string"
                      },
                      "nama_lengkap": {
                        "type": "string"
                      },
                      "nip": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "thumbnail": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "nama": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "tujuan": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "updated_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Provinsi": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "deleted_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "integer"
          },
          "nama": {
            "type": "string"
          },
          "pulau": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "nama": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "ProvinsiList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "deleted_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "nama": {
                  "type": "string"
                },
                "pulau": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "nama": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "updated_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Pulau": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "deleted_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "integer"
          },
          "nama": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_by": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "PulauList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "deleted_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "nama": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "updated_by": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Referensi": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_at": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "referensi": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReferensiList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "deleted_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "referensi": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "StatusPengetahuan": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "nama": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "StatusPengetahuanList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "nama": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SubjenisPengetahuan": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "is_show": {
            "type": "boolean"
          },
          "nama": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SubjenisPengetahuanList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "is_show": {
                  "type": "boolean"
                },
                "nama": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Tag": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "id_mapping": {
            "type": "integer"
          },
          "jenis": {
            "type": "string"
          },
          "nama": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TagList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "id_mapping": {
                  "type": "integer"
                },
                "jenis": {
                  "type": "string"
                },
                "nama": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TotalSummaryList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "total_contributors": {
                  "type": "integer"
                },
                "total_documents": {
                  "type": "integer"
                },
                "total_hits": {
                  "type": "integer"
                },
                "total_threads": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "User": {
        "properties": {
          "alamat": {
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "following_tags": {
            "items": {
              "properties": {
                "id": {
                  "type": "integer"
                },
                "tag": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "nama": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "foto": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "nama": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "integer"
          },
          "jabatan": {
            "type": "string"
          },
          "jenis_kelamin": {
            "type": "string"
          },
          "kategori": {
            "type": "string"
          },
          "level": {
            "type": "string"
          },
          "nama_lengkap": {
            "type": "string"
          },
          "nama_panggilan": {
            "type": "string"
          },
          "nik": {
            "type": "string"
          },
          "nip": {
            "type": "string"
          },
          "orang": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "status_level": {
            "type": "string"
          },
          "telp": {
            "type": "string"
          },
          "tempat_lahir": {
            "type": "string"
          },
          "tgl_lahir": {
            "format": "date",
            "type": "string"
          },
          "total_point": {
            "type": "integer"
          },
          "unit_kerja": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "user_level": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "username_stara": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserList": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "links": {
            "properties": {
              "first": {
                "type": "string"
              },
              "last": {
                "type": "string"
              },
              "next": {
                "type": "string"
              },
              "previous": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "page_context": {
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "alamat": {
                  "type": "string"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "following_tags": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "tag": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "nama": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "user": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "foto": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "nama": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "integer"
                },
                "jabatan": {
                  "type": "string"
                },
                "jenis_kelamin": {
                  "type": "string"
                },
                "kategori": {
                  "type": "string"
                },
                "level": {
                  "type": "string"
                },
                "nama_lengkap": {
                  "type": "string"
                },
                "nama_panggilan": {
                  "type": "string"
                },
                "nik": {
                  "type": "string"
                },
                "nip": {
                  "type": "string"
                },
                "orang": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "status_level": {
                  "type": "string"
                },
                "telp": {
                  "type": "string"
                },
                "tempat_lahir": {
                  "type": "string"
                },
                "tgl_lahir": {
                  "format": "date",
                  "type": "string"
                },
                "total_point": {
                  "type": "integer"
                },
                "unit_kerja": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "user_level": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "username_stara": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "bearerTokenAuth": {
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "security": [
    {
      "bearerTokenAuth": []
    }
  ],
  "tags": [
    {
      "name": "User"
    },
    {
      "name": "Orang"
    },
    {
      "name": "Akademi"
    },
    {
      "name": "JenisPengetahuan"
    },
    {
      "name": "Kompetensi"
    },
    {
      "name": "LingkupPengetahuan"
    },
    {
      "name": "StatusPengetahuan"
    },
    {
      "name": "SubjenisPengetahuan"
    },
    {
      "name": "Tag"
    },
    {
      "name": "Pengetahuan"
    },
    {
      "name": "Like"
    },
    {
      "name": "Dislike"
    },
    {
      "name": "Referensi"
    },
    {
      "name": "Penerbit"
    },
    {
      "name": "Login"
    },
    {
      "name": "Attachment"
    },
    {
      "name": "Komentar"
    },
    {
      "name": "Event"
    },
    {
      "name": "EventMateri"
    },
    {
      "name": "Cop"
    },
    {
      "name": "LeaderTalk"
    },
    {
      "name": "LibraryCafe"
    },
    {
      "name": "Pedoman"
    },
    {
      "name": "KelompokDokumen"
    },
    {
      "name": "KategoriPengetahuan"
    },
    {
      "name": "Dokumen"
    },
    {
      "name": "KategoriBuku"
    },
    {
      "name": "Elibrary"
    },
    {
      "name": "HistoryPoint"
    },
    {
      "name": "DokumenMap"
    },
    {
      "name": "TotalSummary"
    },
    {
      "name": "AdvisAnalytic"
    },
    {
      "name": "AdvisListData"
    },
    {
      "name": "AdvisKategori"
    },
    {
      "name": "AdvisSubKategori"
    },
    {
      "name": "AdvisSumberData"
    },
    {
      "name": "Pulau"
    },
    {
      "name": "Provinsi"
    },
    {
      "name": "Notifikasi"
    },
    {
      "name": "Hadiah"
    },
    {
      "name": "Pencapaian"
    },
    {
      "name": "BannerCarousel"
    }
  ],
  "externalDocs": {
    "url": ""
  }
}